// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package messages

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// MsgType header for JSON deserialization
type MsgTypeHeader struct {
	MsgType              string   `protobuf:"bytes,35,opt,name=MsgType,proto3" json:"MsgType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgTypeHeader) Reset()         { *m = MsgTypeHeader{} }
func (m *MsgTypeHeader) String() string { return proto.CompactTextString(m) }
func (*MsgTypeHeader) ProtoMessage()    {}
func (*MsgTypeHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

func (m *MsgTypeHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgTypeHeader.Unmarshal(m, b)
}
func (m *MsgTypeHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgTypeHeader.Marshal(b, m, deterministic)
}
func (m *MsgTypeHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTypeHeader.Merge(m, src)
}
func (m *MsgTypeHeader) XXX_Size() int {
	return xxx_messageInfo_MsgTypeHeader.Size(m)
}
func (m *MsgTypeHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTypeHeader.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTypeHeader proto.InternalMessageInfo

func (m *MsgTypeHeader) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

type Heartbeat struct {
	MsgType              string   `protobuf:"bytes,35,opt,name=MsgType,proto3" json:"MsgType,omitempty"`
	TestReqID            string   `protobuf:"bytes,112,opt,name=TestReqID,proto3" json:"TestReqID,omitempty"`
	TransactTime         int64    `protobuf:"varint,60,opt,name=TransactTime,proto3" json:"TransactTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Heartbeat) Reset()         { *m = Heartbeat{} }
func (m *Heartbeat) String() string { return proto.CompactTextString(m) }
func (*Heartbeat) ProtoMessage()    {}
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{1}
}

func (m *Heartbeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartbeat.Unmarshal(m, b)
}
func (m *Heartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartbeat.Marshal(b, m, deterministic)
}
func (m *Heartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartbeat.Merge(m, src)
}
func (m *Heartbeat) XXX_Size() int {
	return xxx_messageInfo_Heartbeat.Size(m)
}
func (m *Heartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_Heartbeat proto.InternalMessageInfo

func (m *Heartbeat) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *Heartbeat) GetTestReqID() string {
	if m != nil {
		return m.TestReqID
	}
	return ""
}

func (m *Heartbeat) GetTransactTime() int64 {
	if m != nil {
		return m.TransactTime
	}
	return 0
}

func init() {
	proto.RegisterType((*MsgTypeHeader)(nil), "api.MsgTypeHeader")
	proto.RegisterType((*Heartbeat)(nil), "api.Heartbeat")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_555bd8c177793206) }

var fileDescriptor_555bd8c177793206 = []byte{
	// 139 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0xd2, 0xe4,
	0xe2, 0xf5, 0x2d, 0x4e, 0x0f, 0xa9, 0x2c, 0x48, 0xf5, 0x48, 0x4d, 0x4c, 0x49, 0x2d, 0x12, 0x92,
	0xe0, 0x62, 0x87, 0x0a, 0x48, 0x28, 0x2b, 0x30, 0x6a, 0x70, 0x06, 0xc1, 0xb8, 0x4a, 0xe9, 0x5c,
	0x9c, 0x1e, 0xa9, 0x89, 0x45, 0x25, 0x49, 0xa9, 0x89, 0x25, 0xb8, 0x95, 0x09, 0xc9, 0x70, 0x71,
	0x86, 0xa4, 0x16, 0x97, 0x04, 0xa5, 0x16, 0x7a, 0xba, 0x48, 0x14, 0x80, 0xe5, 0x10, 0x02, 0x42,
	0x4a, 0x5c, 0x3c, 0x21, 0x45, 0x89, 0x79, 0xc5, 0x89, 0xc9, 0x25, 0x21, 0x99, 0xb9, 0xa9, 0x12,
	0x36, 0x0a, 0x8c, 0x1a, 0xcc, 0x41, 0x28, 0x62, 0x49, 0x6c, 0x60, 0xf7, 0x19, 0x03, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x68, 0x77, 0x6f, 0xb6, 0xaf, 0x00, 0x00, 0x00,
}
