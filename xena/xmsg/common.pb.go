// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package xmsg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// MsgType header for JSON deserialization
type MsgTypeHeader struct {
	MsgType              string   `protobuf:"bytes,35,opt,name=MsgType,proto3" json:"MsgType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgTypeHeader) Reset()         { *m = MsgTypeHeader{} }
func (m *MsgTypeHeader) String() string { return proto.CompactTextString(m) }
func (*MsgTypeHeader) ProtoMessage()    {}
func (*MsgTypeHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

func (m *MsgTypeHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgTypeHeader.Unmarshal(m, b)
}
func (m *MsgTypeHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgTypeHeader.Marshal(b, m, deterministic)
}
func (m *MsgTypeHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTypeHeader.Merge(m, src)
}
func (m *MsgTypeHeader) XXX_Size() int {
	return xxx_messageInfo_MsgTypeHeader.Size(m)
}
func (m *MsgTypeHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTypeHeader.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTypeHeader proto.InternalMessageInfo

func (m *MsgTypeHeader) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

type Heartbeat struct {
	MsgType              string   `protobuf:"bytes,35,opt,name=MsgType,proto3" json:"MsgType,omitempty"`
	TestReqId            string   `protobuf:"bytes,112,opt,name=TestReqId,proto3" json:"TestReqId,omitempty"`
	TransactTime         int64    `protobuf:"varint,60,opt,name=TransactTime,proto3" json:"TransactTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Heartbeat) Reset()         { *m = Heartbeat{} }
func (m *Heartbeat) String() string { return proto.CompactTextString(m) }
func (*Heartbeat) ProtoMessage()    {}
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{1}
}

func (m *Heartbeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Heartbeat.Unmarshal(m, b)
}
func (m *Heartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Heartbeat.Marshal(b, m, deterministic)
}
func (m *Heartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Heartbeat.Merge(m, src)
}
func (m *Heartbeat) XXX_Size() int {
	return xxx_messageInfo_Heartbeat.Size(m)
}
func (m *Heartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_Heartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_Heartbeat proto.InternalMessageInfo

func (m *Heartbeat) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *Heartbeat) GetTestReqId() string {
	if m != nil {
		return m.TestReqId
	}
	return ""
}

func (m *Heartbeat) GetTransactTime() int64 {
	if m != nil {
		return m.TransactTime
	}
	return 0
}

type Instrument struct {
	ID                    string   `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"id,omitempty"`
	Type                  string   `protobuf:"bytes,2,opt,name=Type,json=type,proto3" json:"type,omitempty"`
	Symbol                string   `protobuf:"bytes,3,opt,name=Symbol,json=symbol,proto3" json:"symbol,omitempty"`
	BaseCurrencyName      string   `protobuf:"bytes,4,opt,name=BaseCurrencyName,json=baseCurrency,proto3" json:"baseCurrency,omitempty"`
	QuoteCurrencyName     string   `protobuf:"bytes,5,opt,name=QuoteCurrencyName,json=quoteCurrency,proto3" json:"quoteCurrency,omitempty"`
	SettlCurrencyName     string   `protobuf:"bytes,6,opt,name=SettlCurrencyName,json=settlCurrency,proto3" json:"settlCurrency,omitempty"`
	TickSize              int32    `protobuf:"varint,7,opt,name=TickSize,json=tickSize,proto3" json:"tickSize,omitempty"`
	MinOrderQty           string   `protobuf:"bytes,8,opt,name=MinOrderQty,json=minOrderQuantity,proto3" json:"minOrderQuantity,omitempty"`
	OrderQtyStep          string   `protobuf:"bytes,9,opt,name=OrderQtyStep,json=orderQtyStep,proto3" json:"orderQtyStep,omitempty"`
	LimitOrderMaxDistance string   `protobuf:"bytes,10,opt,name=LimitOrderMaxDistance,json=limitOrderMaxDistance,proto3" json:"limitOrderMaxDistance,omitempty"`
	PriceInputMask        string   `protobuf:"bytes,11,opt,name=PriceInputMask,json=priceInputMask,proto3" json:"priceInputMask,omitempty"`
	Indexes               []string `protobuf:"bytes,12,rep,name=Indexes,json=indexes,proto3" json:"indexes,omitempty"`
	Enabled               bool     `protobuf:"varint,13,opt,name=Enabled,json=enabled,proto3" json:"enabled,omitempty"`
	// Fields from derivative
	LiquidationMaxDistance string               `protobuf:"bytes,14,opt,name=LiquidationMaxDistance,json=liquidationMaxDistance,proto3" json:"liquidationMaxDistance,omitempty"`
	ContractValue          string               `protobuf:"bytes,15,opt,name=ContractValue,json=contractValue,proto3" json:"contractValue,omitempty"`
	ContractCurrency       string               `protobuf:"bytes,16,opt,name=ContractCurrency,json=contractCurrency,proto3" json:"contractCurrency,omitempty"`
	LotSize                string               `protobuf:"bytes,17,opt,name=LotSize,json=lotSize,proto3" json:"lotSize,omitempty"`
	TickValue              string               `protobuf:"bytes,18,opt,name=TickValue,json=tickValue,proto3" json:"tickValue,omitempty"`
	MaxOrderQty            string               `protobuf:"bytes,19,opt,name=MaxOrderQty,json=maxOrderQty,proto3" json:"maxOrderQty,omitempty"`
	MaxPosVolume           string               `protobuf:"bytes,20,opt,name=MaxPosVolume,json=maxPosVolume,proto3" json:"maxPosVolume,omitempty"`
	Mark                   string               `protobuf:"bytes,21,opt,name=Mark,json=mark,proto3" json:"mark,omitempty"`
	FloatingPL             string               `protobuf:"bytes,22,opt,name=FloatingPL,json=floatingPL,proto3" json:"floatingPL,omitempty"`
	AddUvmToFreeMargin     string               `protobuf:"bytes,23,opt,name=AddUvmToFreeMargin,json=addUvmToFreeMargin,proto3" json:"addUvmToFreeMargin,omitempty"`
	MinLeverage            string               `protobuf:"bytes,24,opt,name=MinLeverage,json=minLeverage,proto3" json:"minLeverage,omitempty"`
	MaxLeverage            string               `protobuf:"bytes,25,opt,name=MaxLeverage,json=maxLeverage,proto3" json:"maxLeverage,omitempty"`
	Margin                 *Margin              `protobuf:"bytes,26,opt,name=Margin,json=margin,proto3" json:"margin,omitempty"`
	Clearing               *DerivativeOperation `protobuf:"bytes,27,opt,name=Clearing,json=clearing,proto3" json:"clearing,omitempty"`
	Interest               *DerivativeOperation `protobuf:"bytes,28,opt,name=Interest,json=interest,proto3" json:"interest,omitempty"`
	Premium                *DerivativeOperation `protobuf:"bytes,29,opt,name=Premium,json=premium,proto3" json:"premium,omitempty"`
	RiskAdjustment         *DerivativeOperation `protobuf:"bytes,30,opt,name=RiskAdjustment,json=riskAdjustment,proto3" json:"riskAdjustment,omitempty"`
	PricePrecision         int32                `protobuf:"varint,31,opt,name=PricePrecision,json=pricePrecision,proto3" json:"pricePrecision,omitempty"`
	PriceRange             *PriceRange          `protobuf:"bytes,32,opt,name=PriceRange,json=priceRange,proto3" json:"priceRange,omitempty"`
	PriceLimits            *PriceLimits         `protobuf:"bytes,33,opt,name=PriceLimits,json=priceLimits,proto3" json:"priceLimits,omitempty"`
	Inverse                bool                 `protobuf:"varint,34,opt,name=Inverse,json=inverse,proto3" json:"inverse,omitempty"`
	// Futures
	TradingStartDate string `protobuf:"bytes,35,opt,name=TradingStartDate,json=tradingStartDate,proto3" json:"tradingStartDate,omitempty"`
	ExpiryDate       string `protobuf:"bytes,36,opt,name=ExpiryDate,json=expiryDate,proto3" json:"expiryDate,omitempty"`
	// Fields from index
	Basis                int32    `protobuf:"varint,37,opt,name=Basis,json=basis,proto3" json:"basis,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Instrument) Reset()         { *m = Instrument{} }
func (m *Instrument) String() string { return proto.CompactTextString(m) }
func (*Instrument) ProtoMessage()    {}
func (*Instrument) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{2}
}

func (m *Instrument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instrument.Unmarshal(m, b)
}
func (m *Instrument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instrument.Marshal(b, m, deterministic)
}
func (m *Instrument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instrument.Merge(m, src)
}
func (m *Instrument) XXX_Size() int {
	return xxx_messageInfo_Instrument.Size(m)
}
func (m *Instrument) XXX_DiscardUnknown() {
	xxx_messageInfo_Instrument.DiscardUnknown(m)
}

var xxx_messageInfo_Instrument proto.InternalMessageInfo

func (m *Instrument) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Instrument) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Instrument) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *Instrument) GetBaseCurrencyName() string {
	if m != nil {
		return m.BaseCurrencyName
	}
	return ""
}

func (m *Instrument) GetQuoteCurrencyName() string {
	if m != nil {
		return m.QuoteCurrencyName
	}
	return ""
}

func (m *Instrument) GetSettlCurrencyName() string {
	if m != nil {
		return m.SettlCurrencyName
	}
	return ""
}

func (m *Instrument) GetTickSize() int32 {
	if m != nil {
		return m.TickSize
	}
	return 0
}

func (m *Instrument) GetMinOrderQty() string {
	if m != nil {
		return m.MinOrderQty
	}
	return ""
}

func (m *Instrument) GetOrderQtyStep() string {
	if m != nil {
		return m.OrderQtyStep
	}
	return ""
}

func (m *Instrument) GetLimitOrderMaxDistance() string {
	if m != nil {
		return m.LimitOrderMaxDistance
	}
	return ""
}

func (m *Instrument) GetPriceInputMask() string {
	if m != nil {
		return m.PriceInputMask
	}
	return ""
}

func (m *Instrument) GetIndexes() []string {
	if m != nil {
		return m.Indexes
	}
	return nil
}

func (m *Instrument) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Instrument) GetLiquidationMaxDistance() string {
	if m != nil {
		return m.LiquidationMaxDistance
	}
	return ""
}

func (m *Instrument) GetContractValue() string {
	if m != nil {
		return m.ContractValue
	}
	return ""
}

func (m *Instrument) GetContractCurrency() string {
	if m != nil {
		return m.ContractCurrency
	}
	return ""
}

func (m *Instrument) GetLotSize() string {
	if m != nil {
		return m.LotSize
	}
	return ""
}

func (m *Instrument) GetTickValue() string {
	if m != nil {
		return m.TickValue
	}
	return ""
}

func (m *Instrument) GetMaxOrderQty() string {
	if m != nil {
		return m.MaxOrderQty
	}
	return ""
}

func (m *Instrument) GetMaxPosVolume() string {
	if m != nil {
		return m.MaxPosVolume
	}
	return ""
}

func (m *Instrument) GetMark() string {
	if m != nil {
		return m.Mark
	}
	return ""
}

func (m *Instrument) GetFloatingPL() string {
	if m != nil {
		return m.FloatingPL
	}
	return ""
}

func (m *Instrument) GetAddUvmToFreeMargin() string {
	if m != nil {
		return m.AddUvmToFreeMargin
	}
	return ""
}

func (m *Instrument) GetMinLeverage() string {
	if m != nil {
		return m.MinLeverage
	}
	return ""
}

func (m *Instrument) GetMaxLeverage() string {
	if m != nil {
		return m.MaxLeverage
	}
	return ""
}

func (m *Instrument) GetMargin() *Margin {
	if m != nil {
		return m.Margin
	}
	return nil
}

func (m *Instrument) GetClearing() *DerivativeOperation {
	if m != nil {
		return m.Clearing
	}
	return nil
}

func (m *Instrument) GetInterest() *DerivativeOperation {
	if m != nil {
		return m.Interest
	}
	return nil
}

func (m *Instrument) GetPremium() *DerivativeOperation {
	if m != nil {
		return m.Premium
	}
	return nil
}

func (m *Instrument) GetRiskAdjustment() *DerivativeOperation {
	if m != nil {
		return m.RiskAdjustment
	}
	return nil
}

func (m *Instrument) GetPricePrecision() int32 {
	if m != nil {
		return m.PricePrecision
	}
	return 0
}

func (m *Instrument) GetPriceRange() *PriceRange {
	if m != nil {
		return m.PriceRange
	}
	return nil
}

func (m *Instrument) GetPriceLimits() *PriceLimits {
	if m != nil {
		return m.PriceLimits
	}
	return nil
}

func (m *Instrument) GetInverse() bool {
	if m != nil {
		return m.Inverse
	}
	return false
}

func (m *Instrument) GetTradingStartDate() string {
	if m != nil {
		return m.TradingStartDate
	}
	return ""
}

func (m *Instrument) GetExpiryDate() string {
	if m != nil {
		return m.ExpiryDate
	}
	return ""
}

func (m *Instrument) GetBasis() int32 {
	if m != nil {
		return m.Basis
	}
	return 0
}

type Margin struct {
	Netting              string            `protobuf:"bytes,1,opt,name=Netting,json=netting,proto3" json:"netting,omitempty"`
	Rates                []*MarginRate     `protobuf:"bytes,2,rep,name=Rates,json=rates,proto3" json:"rates,omitempty"`
	RateMultipliers      map[string]string `protobuf:"bytes,3,rep,name=RateMultipliers,json=rateMultipliers,proto3" json:"rateMultipliers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Margin) Reset()         { *m = Margin{} }
func (m *Margin) String() string { return proto.CompactTextString(m) }
func (*Margin) ProtoMessage()    {}
func (*Margin) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{3}
}

func (m *Margin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Margin.Unmarshal(m, b)
}
func (m *Margin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Margin.Marshal(b, m, deterministic)
}
func (m *Margin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Margin.Merge(m, src)
}
func (m *Margin) XXX_Size() int {
	return xxx_messageInfo_Margin.Size(m)
}
func (m *Margin) XXX_DiscardUnknown() {
	xxx_messageInfo_Margin.DiscardUnknown(m)
}

var xxx_messageInfo_Margin proto.InternalMessageInfo

func (m *Margin) GetNetting() string {
	if m != nil {
		return m.Netting
	}
	return ""
}

func (m *Margin) GetRates() []*MarginRate {
	if m != nil {
		return m.Rates
	}
	return nil
}

func (m *Margin) GetRateMultipliers() map[string]string {
	if m != nil {
		return m.RateMultipliers
	}
	return nil
}

type MarginRate struct {
	MaxVolume            string   `protobuf:"bytes,1,opt,name=MaxVolume,json=maxVolume,proto3" json:"maxVolume,omitempty"`
	InitialRate          string   `protobuf:"bytes,2,opt,name=InitialRate,json=initialRate,proto3" json:"initialRate,omitempty"`
	MaintenanceRate      string   `protobuf:"bytes,3,opt,name=MaintenanceRate,json=maintenanceRate,proto3" json:"maintenanceRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MarginRate) Reset()         { *m = MarginRate{} }
func (m *MarginRate) String() string { return proto.CompactTextString(m) }
func (*MarginRate) ProtoMessage()    {}
func (*MarginRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{4}
}

func (m *MarginRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MarginRate.Unmarshal(m, b)
}
func (m *MarginRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MarginRate.Marshal(b, m, deterministic)
}
func (m *MarginRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MarginRate.Merge(m, src)
}
func (m *MarginRate) XXX_Size() int {
	return xxx_messageInfo_MarginRate.Size(m)
}
func (m *MarginRate) XXX_DiscardUnknown() {
	xxx_messageInfo_MarginRate.DiscardUnknown(m)
}

var xxx_messageInfo_MarginRate proto.InternalMessageInfo

func (m *MarginRate) GetMaxVolume() string {
	if m != nil {
		return m.MaxVolume
	}
	return ""
}

func (m *MarginRate) GetInitialRate() string {
	if m != nil {
		return m.InitialRate
	}
	return ""
}

func (m *MarginRate) GetMaintenanceRate() string {
	if m != nil {
		return m.MaintenanceRate
	}
	return ""
}

type DerivativeOperation struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=Enabled,json=maxVolenabledume,proto3" json:"maxVolenabledume,omitempty"`
	Index                string   `protobuf:"bytes,2,opt,name=Index,json=index,proto3" json:"index,omitempty"`
	Schedule             int64    `protobuf:"varint,3,opt,name=Schedule,json=schedule,proto3" json:"schedule,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DerivativeOperation) Reset()         { *m = DerivativeOperation{} }
func (m *DerivativeOperation) String() string { return proto.CompactTextString(m) }
func (*DerivativeOperation) ProtoMessage()    {}
func (*DerivativeOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{5}
}

func (m *DerivativeOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DerivativeOperation.Unmarshal(m, b)
}
func (m *DerivativeOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DerivativeOperation.Marshal(b, m, deterministic)
}
func (m *DerivativeOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DerivativeOperation.Merge(m, src)
}
func (m *DerivativeOperation) XXX_Size() int {
	return xxx_messageInfo_DerivativeOperation.Size(m)
}
func (m *DerivativeOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_DerivativeOperation.DiscardUnknown(m)
}

var xxx_messageInfo_DerivativeOperation proto.InternalMessageInfo

func (m *DerivativeOperation) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *DerivativeOperation) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *DerivativeOperation) GetSchedule() int64 {
	if m != nil {
		return m.Schedule
	}
	return 0
}

type PriceRange struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=Enabled,json=enabled,proto3" json:"enabled,omitempty"`
	Distance             string   `protobuf:"bytes,2,opt,name=Distance,json=distance,proto3" json:"distance,omitempty"`
	MovingBoundary       string   `protobuf:"bytes,3,opt,name=MovingBoundary,json=movingBoundary,proto3" json:"movingBoundary,omitempty"`
	MovingTime           int64    `protobuf:"varint,4,opt,name=MovingTime,json=movingTime,proto3" json:"movingTime,omitempty"`
	LowIndex             string   `protobuf:"bytes,5,opt,name=LowIndex,json=lowIndex,proto3" json:"lowIndex,omitempty"`
	HighIndex            string   `protobuf:"bytes,6,opt,name=HighIndex,json=highIndex,proto3" json:"highIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriceRange) Reset()         { *m = PriceRange{} }
func (m *PriceRange) String() string { return proto.CompactTextString(m) }
func (*PriceRange) ProtoMessage()    {}
func (*PriceRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{6}
}

func (m *PriceRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceRange.Unmarshal(m, b)
}
func (m *PriceRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceRange.Marshal(b, m, deterministic)
}
func (m *PriceRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceRange.Merge(m, src)
}
func (m *PriceRange) XXX_Size() int {
	return xxx_messageInfo_PriceRange.Size(m)
}
func (m *PriceRange) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceRange.DiscardUnknown(m)
}

var xxx_messageInfo_PriceRange proto.InternalMessageInfo

func (m *PriceRange) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *PriceRange) GetDistance() string {
	if m != nil {
		return m.Distance
	}
	return ""
}

func (m *PriceRange) GetMovingBoundary() string {
	if m != nil {
		return m.MovingBoundary
	}
	return ""
}

func (m *PriceRange) GetMovingTime() int64 {
	if m != nil {
		return m.MovingTime
	}
	return 0
}

func (m *PriceRange) GetLowIndex() string {
	if m != nil {
		return m.LowIndex
	}
	return ""
}

func (m *PriceRange) GetHighIndex() string {
	if m != nil {
		return m.HighIndex
	}
	return ""
}

type PriceLimits struct {
	Enabled              bool     `protobuf:"varint,1,opt,name=Enabled,json=enabled,proto3" json:"enabled,omitempty"`
	Distance             string   `protobuf:"bytes,2,opt,name=Distance,json=distance,proto3" json:"distance,omitempty"`
	LowIndex             string   `protobuf:"bytes,3,opt,name=LowIndex,json=lowIndex,proto3" json:"lowIndex,omitempty"`
	HighIndex            string   `protobuf:"bytes,4,opt,name=HighIndex,json=highIndex,proto3" json:"highIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriceLimits) Reset()         { *m = PriceLimits{} }
func (m *PriceLimits) String() string { return proto.CompactTextString(m) }
func (*PriceLimits) ProtoMessage()    {}
func (*PriceLimits) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{7}
}

func (m *PriceLimits) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceLimits.Unmarshal(m, b)
}
func (m *PriceLimits) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceLimits.Marshal(b, m, deterministic)
}
func (m *PriceLimits) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceLimits.Merge(m, src)
}
func (m *PriceLimits) XXX_Size() int {
	return xxx_messageInfo_PriceLimits.Size(m)
}
func (m *PriceLimits) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceLimits.DiscardUnknown(m)
}

var xxx_messageInfo_PriceLimits proto.InternalMessageInfo

func (m *PriceLimits) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *PriceLimits) GetDistance() string {
	if m != nil {
		return m.Distance
	}
	return ""
}

func (m *PriceLimits) GetLowIndex() string {
	if m != nil {
		return m.LowIndex
	}
	return ""
}

func (m *PriceLimits) GetHighIndex() string {
	if m != nil {
		return m.HighIndex
	}
	return ""
}

func init() {
	proto.RegisterType((*MsgTypeHeader)(nil), "xmsg.MsgTypeHeader")
	proto.RegisterType((*Heartbeat)(nil), "xmsg.Heartbeat")
	proto.RegisterType((*Instrument)(nil), "xmsg.Instrument")
	proto.RegisterType((*Margin)(nil), "xmsg.Margin")
	proto.RegisterMapType((map[string]string)(nil), "xmsg.Margin.RateMultipliersEntry")
	proto.RegisterType((*MarginRate)(nil), "xmsg.MarginRate")
	proto.RegisterType((*DerivativeOperation)(nil), "xmsg.DerivativeOperation")
	proto.RegisterType((*PriceRange)(nil), "xmsg.PriceRange")
	proto.RegisterType((*PriceLimits)(nil), "xmsg.PriceLimits")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_555bd8c177793206) }

var fileDescriptor_555bd8c177793206 = []byte{
	// 1069 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xdb, 0x72, 0x1b, 0x45,
	0x13, 0x2e, 0x59, 0xe7, 0x96, 0x2d, 0x2b, 0x13, 0xc7, 0xff, 0xc4, 0x7f, 0x08, 0x8a, 0x48, 0x52,
	0x82, 0x0b, 0x17, 0x85, 0x81, 0xa2, 0x28, 0x6e, 0x7c, 0x4a, 0x59, 0x85, 0x36, 0x71, 0x56, 0x22,
	0xf7, 0xa3, 0xdd, 0x46, 0x9e, 0x68, 0x77, 0x76, 0x3d, 0x33, 0x2b, 0x24, 0xaa, 0xb8, 0xe3, 0xd1,
	0x78, 0x0b, 0x5e, 0x86, 0x9a, 0x99, 0x95, 0xb4, 0x32, 0x06, 0x57, 0x71, 0xa7, 0xfe, 0xfa, 0xeb,
	0xed, 0xee, 0xe9, 0x93, 0x60, 0x37, 0x48, 0xe2, 0x38, 0x11, 0xc7, 0xa9, 0x4c, 0x74, 0x42, 0x2a,
	0x8b, 0x58, 0x4d, 0x7b, 0x9f, 0xc3, 0x9e, 0xa7, 0xa6, 0xe3, 0x65, 0x8a, 0x57, 0xc8, 0x42, 0x94,
	0x84, 0x42, 0x3d, 0x07, 0xe8, 0x67, 0xdd, 0x52, 0xbf, 0xe9, 0xaf, 0xc4, 0xde, 0x14, 0x9a, 0x57,
	0xc8, 0xa4, 0x9e, 0x20, 0xd3, 0xff, 0x4c, 0x23, 0xcf, 0xa0, 0x39, 0x46, 0xa5, 0x7d, 0xbc, 0x1d,
	0x84, 0x34, 0xb5, 0xba, 0x0d, 0x40, 0x7a, 0xb0, 0x3b, 0x96, 0x4c, 0x28, 0x16, 0xe8, 0x31, 0x8f,
	0x91, 0xfe, 0xd0, 0x2d, 0xf5, 0xcb, 0xfe, 0x16, 0xd6, 0xfb, 0xbd, 0x05, 0x30, 0x10, 0x4a, 0xcb,
	0x2c, 0x46, 0xa1, 0x49, 0x1b, 0x76, 0x06, 0x17, 0xb4, 0x64, 0xbf, 0xb4, 0xc3, 0x43, 0x42, 0xa0,
	0x62, 0xfd, 0xee, 0x58, 0xa4, 0xa2, 0x8d, 0xd3, 0x43, 0xa8, 0x8d, 0x96, 0xf1, 0x24, 0x89, 0x68,
	0xd9, 0xa2, 0x35, 0x65, 0x25, 0xf2, 0x1a, 0x3a, 0x67, 0x4c, 0xe1, 0x79, 0x26, 0x25, 0x8a, 0x60,
	0xf9, 0x96, 0xc5, 0x48, 0x2b, 0x96, 0xb1, 0x3b, 0x29, 0xe0, 0xa4, 0x0f, 0x8f, 0xde, 0x67, 0x89,
	0xde, 0x26, 0x56, 0x2d, 0x71, 0xef, 0xb6, 0xa8, 0x30, 0xcc, 0x11, 0x6a, 0x1d, 0x6d, 0x31, 0x6b,
	0x8e, 0xa9, 0x8a, 0x0a, 0x72, 0x04, 0x8d, 0x31, 0x0f, 0x66, 0x23, 0xfe, 0x2b, 0xd2, 0x7a, 0xb7,
	0xd4, 0xaf, 0xfa, 0x0d, 0x9d, 0xcb, 0xe4, 0x15, 0xb4, 0x3c, 0x2e, 0xde, 0xc9, 0x10, 0xe5, 0x7b,
	0xbd, 0xa4, 0x0d, 0x6b, 0xdf, 0x89, 0x57, 0x50, 0xc6, 0x84, 0xe6, 0x7a, 0x69, 0x5e, 0x6b, 0xc5,
	0x19, 0x69, 0x4c, 0x69, 0xd3, 0x85, 0x9e, 0x14, 0x30, 0xf2, 0x35, 0x3c, 0x19, 0xf2, 0x98, 0x6b,
	0x4b, 0xf4, 0xd8, 0xe2, 0x82, 0x2b, 0xcd, 0x44, 0x80, 0x14, 0x2c, 0xf9, 0x49, 0x74, 0x9f, 0x92,
	0xbc, 0x86, 0xf6, 0xb5, 0xe4, 0x01, 0x0e, 0x44, 0x9a, 0x69, 0x8f, 0xa9, 0x19, 0x6d, 0x59, 0x7a,
	0x3b, 0xdd, 0x42, 0x4d, 0x9d, 0x07, 0x22, 0xc4, 0x05, 0x2a, 0xba, 0xdb, 0x2d, 0x9b, 0x3a, 0x73,
	0x27, 0x1a, 0xcd, 0xa5, 0x60, 0x93, 0x08, 0x43, 0xba, 0xd7, 0x2d, 0xf5, 0x1b, 0x7e, 0x1d, 0x9d,
	0x48, 0xbe, 0x85, 0xc3, 0x21, 0xbf, 0xcd, 0x78, 0xc8, 0x34, 0x4f, 0x44, 0x31, 0xa4, 0xb6, 0xf5,
	0x71, 0x18, 0xdd, 0xab, 0x25, 0x2f, 0x61, 0xef, 0x3c, 0x11, 0x5a, 0xb2, 0x40, 0x7f, 0x60, 0x51,
	0x86, 0x74, 0xdf, 0x3d, 0x6b, 0x50, 0x04, 0xc9, 0x17, 0xd0, 0x59, 0xb1, 0x56, 0x4f, 0x4d, 0x3b,
	0xee, 0xfd, 0x82, 0x3b, 0xb8, 0x89, 0x71, 0x98, 0x68, 0x5b, 0x81, 0x47, 0xae, 0x4b, 0x23, 0x27,
	0xda, 0x2e, 0xe5, 0xc1, 0xcc, 0xf9, 0x21, 0xae, 0x4b, 0xf5, 0x0a, 0x20, 0x5d, 0x68, 0x79, 0x6c,
	0xb1, 0x2e, 0xcf, 0x63, 0xab, 0x6f, 0xc5, 0x1b, 0xc8, 0x54, 0xc6, 0x63, 0x8b, 0xeb, 0x44, 0x7d,
	0x48, 0xa2, 0x2c, 0x46, 0x7a, 0xe0, 0x2a, 0x13, 0x17, 0x30, 0xd3, 0xa8, 0x1e, 0x93, 0x33, 0xfa,
	0xc4, 0x35, 0x6a, 0xcc, 0xe4, 0x8c, 0x3c, 0x07, 0x78, 0x13, 0x25, 0x4c, 0x73, 0x31, 0xbd, 0x1e,
	0xd2, 0x43, 0xab, 0x81, 0x9f, 0xd7, 0x08, 0x39, 0x06, 0x72, 0x1a, 0x86, 0x3f, 0xcd, 0xe3, 0x71,
	0xf2, 0x46, 0x22, 0x7a, 0x4c, 0x4e, 0xb9, 0xa0, 0xff, 0xb3, 0x3c, 0xc2, 0xfe, 0xa6, 0xb1, 0x91,
	0x72, 0x31, 0xc4, 0x39, 0x4a, 0x36, 0x45, 0x4a, 0xf3, 0x48, 0x37, 0x50, 0x9e, 0xcb, 0x9a, 0xf1,
	0x74, 0x9d, 0xcb, 0x9a, 0xf1, 0x12, 0x6a, 0xb9, 0x9f, 0xa3, 0x6e, 0xa9, 0xdf, 0xfa, 0x6a, 0xf7,
	0xd8, 0xac, 0x86, 0x63, 0x87, 0xf9, 0xb5, 0xd8, 0x79, 0xfa, 0x06, 0x1a, 0xe7, 0x11, 0x32, 0xc9,
	0xc5, 0x94, 0xfe, 0xdf, 0xf2, 0x9e, 0x3a, 0xde, 0x05, 0x4a, 0x3e, 0x67, 0x9a, 0xcf, 0xf1, 0x5d,
	0x8a, 0xd2, 0x56, 0xd5, 0x6f, 0x04, 0x39, 0xd5, 0x98, 0x0d, 0x84, 0x46, 0x89, 0x4a, 0xd3, 0x67,
	0x0f, 0x9a, 0xf1, 0x9c, 0x4a, 0x4e, 0xa0, 0x7e, 0x2d, 0x31, 0xe6, 0x59, 0x4c, 0x3f, 0x79, 0xc8,
	0xaa, 0x9e, 0x3a, 0x26, 0x39, 0x85, 0xb6, 0xcf, 0xd5, 0xec, 0x34, 0xfc, 0x98, 0x29, 0x6d, 0x76,
	0x07, 0x7d, 0xfe, 0x90, 0x6d, 0x5b, 0x6e, 0x19, 0xac, 0xe7, 0xe2, 0x5a, 0x62, 0xc0, 0x15, 0x4f,
	0x04, 0xfd, 0xd4, 0x8e, 0xae, 0x9b, 0x8b, 0x35, 0x4a, 0xbe, 0x04, 0xb0, 0x3c, 0x9f, 0x89, 0x29,
	0xd2, 0xae, 0x75, 0xd3, 0x71, 0x6e, 0x36, 0xb8, 0x0f, 0xe9, 0xfa, 0x37, 0x39, 0x81, 0x96, 0xd5,
	0xd8, 0x61, 0x55, 0xf4, 0x85, 0x35, 0x79, 0x54, 0x30, 0x71, 0x0a, 0xbf, 0x95, 0x6e, 0x04, 0x37,
	0x7e, 0x73, 0x94, 0x0a, 0x69, 0xcf, 0x0d, 0x19, 0x77, 0xa2, 0x19, 0x83, 0xb1, 0x64, 0x21, 0x17,
	0xd3, 0x91, 0x66, 0x52, 0x5f, 0x30, 0xbd, 0xda, 0xc4, 0x1d, 0x7d, 0x07, 0x37, 0x4d, 0x77, 0xb9,
	0x48, 0xb9, 0x5c, 0x5a, 0xd6, 0x4b, 0xd7, 0x74, 0xb8, 0x46, 0xc8, 0x01, 0x54, 0xcf, 0x98, 0xe2,
	0x8a, 0xbe, 0xb2, 0xb9, 0x56, 0x27, 0x46, 0xe8, 0xfd, 0x59, 0x5a, 0xf5, 0x85, 0x09, 0xe3, 0x2d,
	0x6a, 0xd3, 0xa2, 0xf9, 0x1e, 0xae, 0x0b, 0x27, 0x92, 0xd7, 0x50, 0xf5, 0x99, 0x46, 0x45, 0x77,
	0xba, 0xe5, 0xcd, 0x13, 0xe4, 0xad, 0xc3, 0x34, 0xfa, 0x55, 0x69, 0xd4, 0xe4, 0x47, 0xd8, 0x37,
	0xa2, 0x97, 0x45, 0x9a, 0xa7, 0x11, 0x47, 0xa9, 0x68, 0xd9, 0x5a, 0xbc, 0x28, 0x5a, 0x1c, 0xdf,
	0xe1, 0x5c, 0x0a, 0x2d, 0x97, 0xfe, 0xbe, 0xdc, 0x46, 0x8f, 0xce, 0xe0, 0xe0, 0x3e, 0x22, 0xe9,
	0x40, 0x79, 0x86, 0xcb, 0x3c, 0x44, 0xf3, 0xd3, 0x64, 0x36, 0xb7, 0x23, 0xee, 0x8e, 0x85, 0x13,
	0xbe, 0xdf, 0xf9, 0xae, 0xd4, 0x9b, 0x03, 0x6c, 0xa2, 0x34, 0xeb, 0xc0, 0x63, 0x8b, 0x7c, 0x96,
	0x9d, 0x7d, 0x33, 0x5e, 0x01, 0x66, 0x84, 0x06, 0x82, 0x6b, 0xce, 0x22, 0x43, 0xce, 0xbf, 0xd5,
	0xe2, 0x1b, 0x88, 0xf4, 0x61, 0xdf, 0x63, 0xa6, 0x79, 0x85, 0xd9, 0x64, 0x96, 0xe5, 0x0e, 0xd1,
	0x7e, 0xbc, 0x0d, 0xf7, 0x3e, 0xc2, 0xe3, 0x7b, 0xfa, 0x90, 0xbc, 0xd8, 0x6c, 0xd3, 0x92, 0x2d,
	0x74, 0xc7, 0xb9, 0xcf, 0x77, 0xaa, 0x89, 0xe2, 0x00, 0xaa, 0x76, 0x15, 0xaf, 0x72, 0xb1, 0x8b,
	0xd8, 0x5c, 0x99, 0x51, 0x70, 0x83, 0x61, 0x16, 0x39, 0x97, 0x65, 0xbf, 0xa1, 0x72, 0xb9, 0xf7,
	0x47, 0xa9, 0xd8, 0xa5, 0xc5, 0x8d, 0x5d, 0xda, 0xde, 0xd8, 0x47, 0xd0, 0x58, 0xef, 0x68, 0xf7,
	0xf5, 0x46, 0x58, 0xb8, 0x14, 0x5e, 0x32, 0xe7, 0x62, 0x7a, 0x96, 0x64, 0x22, 0x64, 0x72, 0x99,
	0x67, 0xd6, 0x8e, 0xb7, 0x50, 0xd3, 0x64, 0x8e, 0x67, 0xef, 0x7a, 0xc5, 0x86, 0x02, 0xf1, 0x1a,
	0x31, 0x3e, 0x86, 0xc9, 0x2f, 0x2e, 0x03, 0x77, 0x59, 0x1b, 0x51, 0x2e, 0x9b, 0xe7, 0xbf, 0xe2,
	0xd3, 0x1b, 0xa7, 0x74, 0xc7, 0xb4, 0x79, 0xb3, 0x02, 0x7a, 0xbf, 0x6d, 0x4d, 0xce, 0x7f, 0x4c,
	0xa3, 0xe8, 0xbe, 0xfc, 0x6f, 0xee, 0x2b, 0x77, 0xdc, 0x4f, 0x6a, 0xf6, 0xff, 0xd2, 0xc9, 0x5f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x94, 0x5d, 0x6d, 0x17, 0x3f, 0x09, 0x00, 0x00,
}
