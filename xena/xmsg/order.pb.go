// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package xmsg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ApplicationHeartbeat struct {
	MsgType              string   `protobuf:"bytes,35,opt,name=MsgType,json=msgType,proto3" json:"msgType,omitempty"`
	GrpID                string   `protobuf:"bytes,5001,opt,name=GrpID,json=grpId,proto3" json:"grpId,omitempty"`
	HeartBtInt           int32    `protobuf:"varint,108,opt,name=HeartBtInt,json=heartBtInt,proto3" json:"heartBtInt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplicationHeartbeat) Reset()         { *m = ApplicationHeartbeat{} }
func (m *ApplicationHeartbeat) String() string { return proto.CompactTextString(m) }
func (*ApplicationHeartbeat) ProtoMessage()    {}
func (*ApplicationHeartbeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{0}
}

func (m *ApplicationHeartbeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplicationHeartbeat.Unmarshal(m, b)
}
func (m *ApplicationHeartbeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplicationHeartbeat.Marshal(b, m, deterministic)
}
func (m *ApplicationHeartbeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplicationHeartbeat.Merge(m, src)
}
func (m *ApplicationHeartbeat) XXX_Size() int {
	return xxx_messageInfo_ApplicationHeartbeat.Size(m)
}
func (m *ApplicationHeartbeat) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplicationHeartbeat.DiscardUnknown(m)
}

var xxx_messageInfo_ApplicationHeartbeat proto.InternalMessageInfo

func (m *ApplicationHeartbeat) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *ApplicationHeartbeat) GetGrpID() string {
	if m != nil {
		return m.GrpID
	}
	return ""
}

func (m *ApplicationHeartbeat) GetHeartBtInt() int32 {
	if m != nil {
		return m.HeartBtInt
	}
	return 0
}

type TriggeringInstruction struct {
	RefClOrdId           string   `protobuf:"bytes,1806,opt,name=RefClOrdId,json=refClordId,proto3" json:"refClordId,omitempty"`
	TriggerAction        string   `protobuf:"bytes,1101,opt,name=TriggerAction,json=triggerAction,proto3" json:"triggerAction,omitempty"`
	TriggerType          string   `protobuf:"bytes,1100,opt,name=TriggerType,json=triggerType,proto3" json:"triggerType,omitempty"`
	TriggerScope         string   `protobuf:"bytes,1628,opt,name=TriggerScope,json=triggerScope,proto3" json:"triggerScope,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TriggeringInstruction) Reset()         { *m = TriggeringInstruction{} }
func (m *TriggeringInstruction) String() string { return proto.CompactTextString(m) }
func (*TriggeringInstruction) ProtoMessage()    {}
func (*TriggeringInstruction) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{1}
}

func (m *TriggeringInstruction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TriggeringInstruction.Unmarshal(m, b)
}
func (m *TriggeringInstruction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TriggeringInstruction.Marshal(b, m, deterministic)
}
func (m *TriggeringInstruction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TriggeringInstruction.Merge(m, src)
}
func (m *TriggeringInstruction) XXX_Size() int {
	return xxx_messageInfo_TriggeringInstruction.Size(m)
}
func (m *TriggeringInstruction) XXX_DiscardUnknown() {
	xxx_messageInfo_TriggeringInstruction.DiscardUnknown(m)
}

var xxx_messageInfo_TriggeringInstruction proto.InternalMessageInfo

func (m *TriggeringInstruction) GetRefClOrdId() string {
	if m != nil {
		return m.RefClOrdId
	}
	return ""
}

func (m *TriggeringInstruction) GetTriggerAction() string {
	if m != nil {
		return m.TriggerAction
	}
	return ""
}

func (m *TriggeringInstruction) GetTriggerType() string {
	if m != nil {
		return m.TriggerType
	}
	return ""
}

func (m *TriggeringInstruction) GetTriggerScope() string {
	if m != nil {
		return m.TriggerScope
	}
	return ""
}

type Partie struct {
	PartieId             string   `protobuf:"bytes,448,opt,name=PartieId,json=partieId,proto3" json:"partieId,omitempty"`
	PartieRole           string   `protobuf:"bytes,45,opt,name=PartieRole,json=partieRole,proto3" json:"partieRole,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Partie) Reset()         { *m = Partie{} }
func (m *Partie) String() string { return proto.CompactTextString(m) }
func (*Partie) ProtoMessage()    {}
func (*Partie) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{2}
}

func (m *Partie) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Partie.Unmarshal(m, b)
}
func (m *Partie) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Partie.Marshal(b, m, deterministic)
}
func (m *Partie) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Partie.Merge(m, src)
}
func (m *Partie) XXX_Size() int {
	return xxx_messageInfo_Partie.Size(m)
}
func (m *Partie) XXX_DiscardUnknown() {
	xxx_messageInfo_Partie.DiscardUnknown(m)
}

var xxx_messageInfo_Partie proto.InternalMessageInfo

func (m *Partie) GetPartieId() string {
	if m != nil {
		return m.PartieId
	}
	return ""
}

func (m *Partie) GetPartieRole() string {
	if m != nil {
		return m.PartieRole
	}
	return ""
}

type SLTP struct {
	OrdType  string `protobuf:"bytes,40,opt,name=OrdType,json=ordType,proto3" json:"ordType,omitempty"`
	Price    string `protobuf:"bytes,44,opt,name=Price,json=price,proto3" json:"price,omitempty"`
	StopPx   string `protobuf:"bytes,99,opt,name=StopPx,json=stopPx,proto3" json:"stopPx,omitempty"`
	CapPrice string `protobuf:"bytes,1199,opt,name=CapPrice,json=capPrice,proto3" json:"capPrice,omitempty"`
	// Trailing orders
	PegPriceType         string   `protobuf:"bytes,1094,opt,name=PegPriceType,json=pegPriceType,proto3" json:"pegPriceType,omitempty"`
	PegOffsetType        string   `protobuf:"bytes,836,opt,name=PegOffsetType,json=pegOffsetType,proto3" json:"pegOffsetType,omitempty"`
	PegOffsetValue       string   `protobuf:"bytes,211,opt,name=PegOffsetValue,json=pegOffsetValue,proto3" json:"pegOffsetValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SLTP) Reset()         { *m = SLTP{} }
func (m *SLTP) String() string { return proto.CompactTextString(m) }
func (*SLTP) ProtoMessage()    {}
func (*SLTP) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{3}
}

func (m *SLTP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SLTP.Unmarshal(m, b)
}
func (m *SLTP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SLTP.Marshal(b, m, deterministic)
}
func (m *SLTP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SLTP.Merge(m, src)
}
func (m *SLTP) XXX_Size() int {
	return xxx_messageInfo_SLTP.Size(m)
}
func (m *SLTP) XXX_DiscardUnknown() {
	xxx_messageInfo_SLTP.DiscardUnknown(m)
}

var xxx_messageInfo_SLTP proto.InternalMessageInfo

func (m *SLTP) GetOrdType() string {
	if m != nil {
		return m.OrdType
	}
	return ""
}

func (m *SLTP) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *SLTP) GetStopPx() string {
	if m != nil {
		return m.StopPx
	}
	return ""
}

func (m *SLTP) GetCapPrice() string {
	if m != nil {
		return m.CapPrice
	}
	return ""
}

func (m *SLTP) GetPegPriceType() string {
	if m != nil {
		return m.PegPriceType
	}
	return ""
}

func (m *SLTP) GetPegOffsetType() string {
	if m != nil {
		return m.PegOffsetType
	}
	return ""
}

func (m *SLTP) GetPegOffsetValue() string {
	if m != nil {
		return m.PegOffsetValue
	}
	return ""
}

type NewOrderSingle struct {
	MsgType string `protobuf:"bytes,35,opt,name=MsgType,json=msgType,proto3" json:"msgType,omitempty"`
	// Order ID unique for Account.
	ClOrdId string `protobuf:"bytes,11,opt,name=ClOrdId,json=clOrdId,proto3" json:"clOrdId,omitempty"`
	// Unique order ID across the exchange.
	OrderId      string `protobuf:"bytes,37,opt,name=OrderId,json=orderId,proto3" json:"orderId,omitempty"`
	Symbol       string `protobuf:"bytes,55,opt,name=Symbol,json=symbol,proto3" json:"symbol,omitempty"`
	Side         string `protobuf:"bytes,54,opt,name=Side,json=side,proto3" json:"side,omitempty"`
	SettlType    string `protobuf:"bytes,63,opt,name=SettlType,json=settlType,proto3" json:"settlType,omitempty"`
	TransactTime int64  `protobuf:"varint,60,opt,name=TransactTime,json=transactTime,proto3" json:"transactTime,omitempty"`
	ListSeqNo    int32  `protobuf:"varint,67,opt,name=ListSeqNo,json=listSeqNo,proto3" json:"listSeqNo,omitempty"`
	// Quantity of sold or bought base currency.
	// Could be change by:
	// 1. Partially order execution.
	// 2. Order modifications.
	OrderQty string `protobuf:"bytes,38,opt,name=OrderQty,json=orderQty,proto3" json:"orderQty,omitempty"`
	OrdType  string `protobuf:"bytes,40,opt,name=OrdType,json=ordType,proto3" json:"ordType,omitempty"`
	// For deferred orders only.
	Price    string `protobuf:"bytes,44,opt,name=Price,json=price,proto3" json:"price,omitempty"`
	StopPx   string `protobuf:"bytes,99,opt,name=StopPx,json=stopPx,proto3" json:"stopPx,omitempty"`
	CapPrice string `protobuf:"bytes,1199,opt,name=CapPrice,json=capPrice,proto3" json:"capPrice,omitempty"`
	// Unique client ID across echange.
	Account     uint64   `protobuf:"varint,1,opt,name=Account,json=account,proto3" json:"account,omitempty"`
	ExecInst    []string `protobuf:"bytes,18,rep,name=ExecInst,json=execInst,proto3" json:"execInst,omitempty"`
	TimeInForce string   `protobuf:"bytes,59,opt,name=TimeInForce,json=timeInForce,proto3" json:"timeInForce,omitempty"`
	// Commission
	CommissionLevel string `protobuf:"bytes,3015,opt,name=CommissionLevel,json=commissionLevel,proto3" json:"commissionLevel,omitempty"`
	// Trailing orders
	PegPriceType   string `protobuf:"bytes,1094,opt,name=PegPriceType,json=pegPriceType,proto3" json:"pegPriceType,omitempty"`
	PegOffsetType  string `protobuf:"bytes,836,opt,name=PegOffsetType,json=pegOffsetType,proto3" json:"pegOffsetType,omitempty"`
	PegOffsetValue string `protobuf:"bytes,211,opt,name=PegOffsetValue,json=pegOffsetValue,proto3" json:"pegOffsetValue,omitempty"`
	// Triggers
	TriggeringInstructions []*TriggeringInstruction `protobuf:"bytes,1114,rep,name=TriggeringInstructions,json=triggeringInstructions,proto3" json:"triggeringInstructions,omitempty"`
	// Deriative positions
	PositionId     uint64 `protobuf:"varint,2618,opt,name=PositionId,json=positionId,proto3" json:"positionId,omitempty"`
	PositionEffect string `protobuf:"bytes,77,opt,name=PositionEffect,json=positionEffect,proto3" json:"positionEffect,omitempty"`
	// Derivative SLTP
	SLTP                 []*SLTP  `protobuf:"bytes,5000,rep,name=SLTP,json=sltp,proto3" json:"sltp,omitempty"`
	Text                 string   `protobuf:"bytes,58,opt,name=Text,json=text,proto3" json:"text,omitempty"`
	GrpID                string   `protobuf:"bytes,5001,opt,name=GrpID,json=grpId,proto3" json:"grpId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewOrderSingle) Reset()         { *m = NewOrderSingle{} }
func (m *NewOrderSingle) String() string { return proto.CompactTextString(m) }
func (*NewOrderSingle) ProtoMessage()    {}
func (*NewOrderSingle) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{4}
}

func (m *NewOrderSingle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewOrderSingle.Unmarshal(m, b)
}
func (m *NewOrderSingle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewOrderSingle.Marshal(b, m, deterministic)
}
func (m *NewOrderSingle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewOrderSingle.Merge(m, src)
}
func (m *NewOrderSingle) XXX_Size() int {
	return xxx_messageInfo_NewOrderSingle.Size(m)
}
func (m *NewOrderSingle) XXX_DiscardUnknown() {
	xxx_messageInfo_NewOrderSingle.DiscardUnknown(m)
}

var xxx_messageInfo_NewOrderSingle proto.InternalMessageInfo

func (m *NewOrderSingle) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *NewOrderSingle) GetClOrdId() string {
	if m != nil {
		return m.ClOrdId
	}
	return ""
}

func (m *NewOrderSingle) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *NewOrderSingle) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *NewOrderSingle) GetSide() string {
	if m != nil {
		return m.Side
	}
	return ""
}

func (m *NewOrderSingle) GetSettlType() string {
	if m != nil {
		return m.SettlType
	}
	return ""
}

func (m *NewOrderSingle) GetTransactTime() int64 {
	if m != nil {
		return m.TransactTime
	}
	return 0
}

func (m *NewOrderSingle) GetListSeqNo() int32 {
	if m != nil {
		return m.ListSeqNo
	}
	return 0
}

func (m *NewOrderSingle) GetOrderQty() string {
	if m != nil {
		return m.OrderQty
	}
	return ""
}

func (m *NewOrderSingle) GetOrdType() string {
	if m != nil {
		return m.OrdType
	}
	return ""
}

func (m *NewOrderSingle) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *NewOrderSingle) GetStopPx() string {
	if m != nil {
		return m.StopPx
	}
	return ""
}

func (m *NewOrderSingle) GetCapPrice() string {
	if m != nil {
		return m.CapPrice
	}
	return ""
}

func (m *NewOrderSingle) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *NewOrderSingle) GetExecInst() []string {
	if m != nil {
		return m.ExecInst
	}
	return nil
}

func (m *NewOrderSingle) GetTimeInForce() string {
	if m != nil {
		return m.TimeInForce
	}
	return ""
}

func (m *NewOrderSingle) GetCommissionLevel() string {
	if m != nil {
		return m.CommissionLevel
	}
	return ""
}

func (m *NewOrderSingle) GetPegPriceType() string {
	if m != nil {
		return m.PegPriceType
	}
	return ""
}

func (m *NewOrderSingle) GetPegOffsetType() string {
	if m != nil {
		return m.PegOffsetType
	}
	return ""
}

func (m *NewOrderSingle) GetPegOffsetValue() string {
	if m != nil {
		return m.PegOffsetValue
	}
	return ""
}

func (m *NewOrderSingle) GetTriggeringInstructions() []*TriggeringInstruction {
	if m != nil {
		return m.TriggeringInstructions
	}
	return nil
}

func (m *NewOrderSingle) GetPositionId() uint64 {
	if m != nil {
		return m.PositionId
	}
	return 0
}

func (m *NewOrderSingle) GetPositionEffect() string {
	if m != nil {
		return m.PositionEffect
	}
	return ""
}

func (m *NewOrderSingle) GetSLTP() []*SLTP {
	if m != nil {
		return m.SLTP
	}
	return nil
}

func (m *NewOrderSingle) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *NewOrderSingle) GetGrpID() string {
	if m != nil {
		return m.GrpID
	}
	return ""
}

type ExecutionReport struct {
	MsgType        string `protobuf:"bytes,35,opt,name=MsgType,json=msgType,proto3" json:"msgType,omitempty"`
	OrdStatusReqID string `protobuf:"bytes,790,opt,name=OrdStatusReqID,json=ordStatusReqID,proto3" json:"ordStatusReqID,omitempty"`
	// Finance account. Unique client ID across exchange.
	Account uint64 `protobuf:"varint,1,opt,name=Account,json=account,proto3" json:"account,omitempty"`
	// Client order identificator.
	ClOrdId     string `protobuf:"bytes,11,opt,name=ClOrdId,json=clOrdId,proto3" json:"clOrdId,omitempty"`
	OrigClOrdId string `protobuf:"bytes,41,opt,name=OrigClOrdId,json=origClOrdId,proto3" json:"origClOrdId,omitempty"`
	OrderId     string `protobuf:"bytes,37,opt,name=OrderId,json=orderId,proto3" json:"orderId,omitempty"`
	ListId      string `protobuf:"bytes,66,opt,name=ListId,json=listId,proto3" json:"listId,omitempty"`
	// Trade instrument name.
	Symbol      string   `protobuf:"bytes,55,opt,name=Symbol,json=symbol,proto3" json:"symbol,omitempty"`
	OrdType     string   `protobuf:"bytes,40,opt,name=OrdType,json=ordType,proto3" json:"ordType,omitempty"`
	Price       string   `protobuf:"bytes,44,opt,name=Price,json=price,proto3" json:"price,omitempty"`
	StopPx      string   `protobuf:"bytes,99,opt,name=StopPx,json=stopPx,proto3" json:"stopPx,omitempty"`
	ExecInst    []string `protobuf:"bytes,18,rep,name=ExecInst,json=execInst,proto3" json:"execInst,omitempty"`
	TimeInForce string   `protobuf:"bytes,59,opt,name=TimeInForce,json=timeInForce,proto3" json:"timeInForce,omitempty"`
	// Moment(timestamp) of transaction execution.
	TransactTime          int64  `protobuf:"varint,60,opt,name=TransactTime,json=transactTime,proto3" json:"transactTime,omitempty"`
	ExecId                string `protobuf:"bytes,17,opt,name=ExecId,json=execId,proto3" json:"execId,omitempty"`
	ExecType              string `protobuf:"bytes,150,opt,name=ExecType,json=execType,proto3" json:"execType,omitempty"`
	ExecRestatementReason string `protobuf:"bytes,378,opt,name=ExecRestatementReason,json=execRestatementReason,proto3" json:"execRestatementReason,omitempty"`
	// Trade identifier
	TradeId string `protobuf:"bytes,1003,opt,name=TradeId,json=tradeId,proto3" json:"tradeId,omitempty"`
	// Current order status.
	OrdStatus string `protobuf:"bytes,39,opt,name=OrdStatus,json=ordStatus,proto3" json:"ordStatus,omitempty"`
	// Rejection reason.
	OrdRejReason string `protobuf:"bytes,103,opt,name=OrdRejReason,json=ordRejReason,proto3" json:"ordRejReason,omitempty"`
	// Trade side, could be Buy or Sell.
	Side string `protobuf:"bytes,54,opt,name=Side,json=side,proto3" json:"side,omitempty"`
	// Current OrderQty value. Could be changed by trader.
	OrderQty string `protobuf:"bytes,38,opt,name=OrderQty,json=orderQty,proto3" json:"orderQty,omitempty"`
	// Quantity which is leaved after last execution.
	LeavesQty string `protobuf:"bytes,151,opt,name=LeavesQty,json=leavesQty,proto3" json:"leavesQty,omitempty"`
	// Cummulative quantity value of executed part of order.
	CumQty string `protobuf:"bytes,14,opt,name=CumQty,json=cumQty,proto3" json:"cumQty,omitempty"`
	// Quantity closed by last execution.
	LastQty string `protobuf:"bytes,32,opt,name=LastQty,json=lastQty,proto3" json:"lastQty,omitempty"`
	// Stop order CapPrice
	CapPrice string `protobuf:"bytes,1199,opt,name=CapPrice,json=capPrice,proto3" json:"capPrice,omitempty"`
	// Execution price.
	LastPx               string `protobuf:"bytes,31,opt,name=LastPx,json=lastPx,proto3" json:"lastPx,omitempty"`
	AvgPx                string `protobuf:"bytes,6,opt,name=AvgPx,json=avgPx,proto3" json:"avgPx,omitempty"`
	CalculatedCcyLastQty string `protobuf:"bytes,1056,opt,name=CalculatedCcyLastQty,json=calculatedCcyLastQty,proto3" json:"calculatedCcyLastQty,omitempty"`
	Currency             string `protobuf:"bytes,15,opt,name=Currency,json=currency,proto3" json:"currency,omitempty"`
	SettlCurrency        string `protobuf:"bytes,120,opt,name=SettlCurrency,json=settlCurrency,proto3" json:"settlCurrency,omitempty"`
	SettlType            string `protobuf:"bytes,63,opt,name=SettlType,json=settlType,proto3" json:"settlType,omitempty"`
	NetMoney             string `protobuf:"bytes,118,opt,name=NetMoney,json=netMoney,proto3" json:"netMoney,omitempty"`
	// Commission
	LastLiquidityInd string `protobuf:"bytes,851,opt,name=LastLiquidityInd,json=lastLiquidityInd,proto3" json:"lastLiquidityInd,omitempty"`
	Commission       string `protobuf:"bytes,12,opt,name=Commission,json=commission,proto3" json:"commission,omitempty"`
	CommRate         string `protobuf:"bytes,1233,opt,name=CommRate,json=commRate,proto3" json:"commRate,omitempty"`
	CommCurrency     string `protobuf:"bytes,479,opt,name=CommCurrency,json=commCurrency,proto3" json:"commCurrency,omitempty"`
	// Rejection detailed description.
	RejectText string `protobuf:"bytes,1328,opt,name=RejectText,json=rejectText,proto3" json:"rejectText,omitempty"`
	// Trailings
	PegPriceType   string `protobuf:"bytes,1094,opt,name=PegPriceType,json=pegPriceType,proto3" json:"pegPriceType,omitempty"`
	PegOffsetType  string `protobuf:"bytes,836,opt,name=PegOffsetType,json=pegOffsetType,proto3" json:"pegOffsetType,omitempty"`
	PegOffsetValue string `protobuf:"bytes,211,opt,name=PegOffsetValue,json=pegOffsetValue,proto3" json:"pegOffsetValue,omitempty"`
	// Position
	PositionId     uint64 `protobuf:"varint,2618,opt,name=PositionId,json=positionId,proto3" json:"positionId,omitempty"`
	PositionEffect string `protobuf:"bytes,77,opt,name=PositionEffect,json=positionEffect,proto3" json:"positionEffect,omitempty"`
	// Margin
	MarginAmt     string `protobuf:"bytes,1645,opt,name=MarginAmt,json=marginAmt,proto3" json:"marginAmt,omitempty"`
	MarginAmtType string `protobuf:"bytes,1644,opt,name=MarginAmtType,json=marginAmtType,proto3" json:"marginAmtType,omitempty"`
	MarginAmtCcy  string `protobuf:"bytes,1646,opt,name=MarginAmtCcy,json=marginAmtCcy,proto3" json:"marginAmtCcy,omitempty"`
	// Derivative SLTP
	SLTP                 []*SLTP  `protobuf:"bytes,5000,rep,name=SLTP,json=sltp,proto3" json:"sltp,omitempty"`
	Text                 string   `protobuf:"bytes,58,opt,name=Text,json=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecutionReport) Reset()         { *m = ExecutionReport{} }
func (m *ExecutionReport) String() string { return proto.CompactTextString(m) }
func (*ExecutionReport) ProtoMessage()    {}
func (*ExecutionReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{5}
}

func (m *ExecutionReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionReport.Unmarshal(m, b)
}
func (m *ExecutionReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionReport.Marshal(b, m, deterministic)
}
func (m *ExecutionReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionReport.Merge(m, src)
}
func (m *ExecutionReport) XXX_Size() int {
	return xxx_messageInfo_ExecutionReport.Size(m)
}
func (m *ExecutionReport) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionReport.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionReport proto.InternalMessageInfo

func (m *ExecutionReport) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *ExecutionReport) GetOrdStatusReqID() string {
	if m != nil {
		return m.OrdStatusReqID
	}
	return ""
}

func (m *ExecutionReport) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *ExecutionReport) GetClOrdId() string {
	if m != nil {
		return m.ClOrdId
	}
	return ""
}

func (m *ExecutionReport) GetOrigClOrdId() string {
	if m != nil {
		return m.OrigClOrdId
	}
	return ""
}

func (m *ExecutionReport) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *ExecutionReport) GetListId() string {
	if m != nil {
		return m.ListId
	}
	return ""
}

func (m *ExecutionReport) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *ExecutionReport) GetOrdType() string {
	if m != nil {
		return m.OrdType
	}
	return ""
}

func (m *ExecutionReport) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *ExecutionReport) GetStopPx() string {
	if m != nil {
		return m.StopPx
	}
	return ""
}

func (m *ExecutionReport) GetExecInst() []string {
	if m != nil {
		return m.ExecInst
	}
	return nil
}

func (m *ExecutionReport) GetTimeInForce() string {
	if m != nil {
		return m.TimeInForce
	}
	return ""
}

func (m *ExecutionReport) GetTransactTime() int64 {
	if m != nil {
		return m.TransactTime
	}
	return 0
}

func (m *ExecutionReport) GetExecId() string {
	if m != nil {
		return m.ExecId
	}
	return ""
}

func (m *ExecutionReport) GetExecType() string {
	if m != nil {
		return m.ExecType
	}
	return ""
}

func (m *ExecutionReport) GetExecRestatementReason() string {
	if m != nil {
		return m.ExecRestatementReason
	}
	return ""
}

func (m *ExecutionReport) GetTradeId() string {
	if m != nil {
		return m.TradeId
	}
	return ""
}

func (m *ExecutionReport) GetOrdStatus() string {
	if m != nil {
		return m.OrdStatus
	}
	return ""
}

func (m *ExecutionReport) GetOrdRejReason() string {
	if m != nil {
		return m.OrdRejReason
	}
	return ""
}

func (m *ExecutionReport) GetSide() string {
	if m != nil {
		return m.Side
	}
	return ""
}

func (m *ExecutionReport) GetOrderQty() string {
	if m != nil {
		return m.OrderQty
	}
	return ""
}

func (m *ExecutionReport) GetLeavesQty() string {
	if m != nil {
		return m.LeavesQty
	}
	return ""
}

func (m *ExecutionReport) GetCumQty() string {
	if m != nil {
		return m.CumQty
	}
	return ""
}

func (m *ExecutionReport) GetLastQty() string {
	if m != nil {
		return m.LastQty
	}
	return ""
}

func (m *ExecutionReport) GetCapPrice() string {
	if m != nil {
		return m.CapPrice
	}
	return ""
}

func (m *ExecutionReport) GetLastPx() string {
	if m != nil {
		return m.LastPx
	}
	return ""
}

func (m *ExecutionReport) GetAvgPx() string {
	if m != nil {
		return m.AvgPx
	}
	return ""
}

func (m *ExecutionReport) GetCalculatedCcyLastQty() string {
	if m != nil {
		return m.CalculatedCcyLastQty
	}
	return ""
}

func (m *ExecutionReport) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *ExecutionReport) GetSettlCurrency() string {
	if m != nil {
		return m.SettlCurrency
	}
	return ""
}

func (m *ExecutionReport) GetSettlType() string {
	if m != nil {
		return m.SettlType
	}
	return ""
}

func (m *ExecutionReport) GetNetMoney() string {
	if m != nil {
		return m.NetMoney
	}
	return ""
}

func (m *ExecutionReport) GetLastLiquidityInd() string {
	if m != nil {
		return m.LastLiquidityInd
	}
	return ""
}

func (m *ExecutionReport) GetCommission() string {
	if m != nil {
		return m.Commission
	}
	return ""
}

func (m *ExecutionReport) GetCommRate() string {
	if m != nil {
		return m.CommRate
	}
	return ""
}

func (m *ExecutionReport) GetCommCurrency() string {
	if m != nil {
		return m.CommCurrency
	}
	return ""
}

func (m *ExecutionReport) GetRejectText() string {
	if m != nil {
		return m.RejectText
	}
	return ""
}

func (m *ExecutionReport) GetPegPriceType() string {
	if m != nil {
		return m.PegPriceType
	}
	return ""
}

func (m *ExecutionReport) GetPegOffsetType() string {
	if m != nil {
		return m.PegOffsetType
	}
	return ""
}

func (m *ExecutionReport) GetPegOffsetValue() string {
	if m != nil {
		return m.PegOffsetValue
	}
	return ""
}

func (m *ExecutionReport) GetPositionId() uint64 {
	if m != nil {
		return m.PositionId
	}
	return 0
}

func (m *ExecutionReport) GetPositionEffect() string {
	if m != nil {
		return m.PositionEffect
	}
	return ""
}

func (m *ExecutionReport) GetMarginAmt() string {
	if m != nil {
		return m.MarginAmt
	}
	return ""
}

func (m *ExecutionReport) GetMarginAmtType() string {
	if m != nil {
		return m.MarginAmtType
	}
	return ""
}

func (m *ExecutionReport) GetMarginAmtCcy() string {
	if m != nil {
		return m.MarginAmtCcy
	}
	return ""
}

func (m *ExecutionReport) GetSLTP() []*SLTP {
	if m != nil {
		return m.SLTP
	}
	return nil
}

func (m *ExecutionReport) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type OrderCancelRequest struct {
	MsgType string `protobuf:"bytes,35,opt,name=MsgType,json=msgType,proto3" json:"msgType,omitempty"`
	// Request ID unique for Account.
	ClOrdId string `protobuf:"bytes,11,opt,name=ClOrdId,json=clOrdId,proto3" json:"clOrdId,omitempty"`
	// Client Order ID (ClOrdId) of order to cancel
	OrigClOrdId string `protobuf:"bytes,41,opt,name=OrigClOrdId,json=origClOrdId,proto3" json:"origClOrdId,omitempty"`
	// Unique order ID across the exchange.
	OrderId      string `protobuf:"bytes,37,opt,name=OrderId,json=orderId,proto3" json:"orderId,omitempty"`
	Symbol       string `protobuf:"bytes,55,opt,name=Symbol,json=symbol,proto3" json:"symbol,omitempty"`
	Side         string `protobuf:"bytes,54,opt,name=Side,json=side,proto3" json:"side,omitempty"`
	TransactTime int64  `protobuf:"varint,60,opt,name=TransactTime,json=transactTime,proto3" json:"transactTime,omitempty"`
	// Unique client ID across exchange.
	Account              uint64   `protobuf:"varint,1,opt,name=Account,json=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderCancelRequest) Reset()         { *m = OrderCancelRequest{} }
func (m *OrderCancelRequest) String() string { return proto.CompactTextString(m) }
func (*OrderCancelRequest) ProtoMessage()    {}
func (*OrderCancelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{6}
}

func (m *OrderCancelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCancelRequest.Unmarshal(m, b)
}
func (m *OrderCancelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCancelRequest.Marshal(b, m, deterministic)
}
func (m *OrderCancelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCancelRequest.Merge(m, src)
}
func (m *OrderCancelRequest) XXX_Size() int {
	return xxx_messageInfo_OrderCancelRequest.Size(m)
}
func (m *OrderCancelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCancelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCancelRequest proto.InternalMessageInfo

func (m *OrderCancelRequest) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *OrderCancelRequest) GetClOrdId() string {
	if m != nil {
		return m.ClOrdId
	}
	return ""
}

func (m *OrderCancelRequest) GetOrigClOrdId() string {
	if m != nil {
		return m.OrigClOrdId
	}
	return ""
}

func (m *OrderCancelRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *OrderCancelRequest) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *OrderCancelRequest) GetSide() string {
	if m != nil {
		return m.Side
	}
	return ""
}

func (m *OrderCancelRequest) GetTransactTime() int64 {
	if m != nil {
		return m.TransactTime
	}
	return 0
}

func (m *OrderCancelRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

type OrderCancelReject struct {
	MsgType              string   `protobuf:"bytes,35,opt,name=MsgType,json=msgType,proto3" json:"msgType,omitempty"`
	Account              uint64   `protobuf:"varint,1,opt,name=Account,json=account,proto3" json:"account,omitempty"`
	Symbol               string   `protobuf:"bytes,55,opt,name=Symbol,json=symbol,proto3" json:"symbol,omitempty"`
	ClOrdId              string   `protobuf:"bytes,11,opt,name=ClOrdId,json=clOrdId,proto3" json:"clOrdId,omitempty"`
	OrigClOrdId          string   `protobuf:"bytes,41,opt,name=OrigClOrdId,json=origClOrdId,proto3" json:"origClOrdId,omitempty"`
	OrderId              string   `protobuf:"bytes,37,opt,name=OrderId,json=orderId,proto3" json:"orderId,omitempty"`
	OrdStatus            string   `protobuf:"bytes,39,opt,name=OrdStatus,json=ordStatus,proto3" json:"ordStatus,omitempty"`
	CxlRejResponseTo     string   `protobuf:"bytes,434,opt,name=CxlRejResponseTo,json=cxlRejResponseTo,proto3" json:"cxlRejResponseTo,omitempty"`
	CxlRejReason         string   `protobuf:"bytes,102,opt,name=CxlRejReason,json=cxlRejReason,proto3" json:"cxlRejReason,omitempty"`
	RejectText           string   `protobuf:"bytes,1328,opt,name=RejectText,json=rejectText,proto3" json:"rejectText,omitempty"`
	TransactTime         int64    `protobuf:"varint,60,opt,name=TransactTime,json=transactTime,proto3" json:"transactTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderCancelReject) Reset()         { *m = OrderCancelReject{} }
func (m *OrderCancelReject) String() string { return proto.CompactTextString(m) }
func (*OrderCancelReject) ProtoMessage()    {}
func (*OrderCancelReject) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{7}
}

func (m *OrderCancelReject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCancelReject.Unmarshal(m, b)
}
func (m *OrderCancelReject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCancelReject.Marshal(b, m, deterministic)
}
func (m *OrderCancelReject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCancelReject.Merge(m, src)
}
func (m *OrderCancelReject) XXX_Size() int {
	return xxx_messageInfo_OrderCancelReject.Size(m)
}
func (m *OrderCancelReject) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCancelReject.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCancelReject proto.InternalMessageInfo

func (m *OrderCancelReject) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *OrderCancelReject) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *OrderCancelReject) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *OrderCancelReject) GetClOrdId() string {
	if m != nil {
		return m.ClOrdId
	}
	return ""
}

func (m *OrderCancelReject) GetOrigClOrdId() string {
	if m != nil {
		return m.OrigClOrdId
	}
	return ""
}

func (m *OrderCancelReject) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *OrderCancelReject) GetOrdStatus() string {
	if m != nil {
		return m.OrdStatus
	}
	return ""
}

func (m *OrderCancelReject) GetCxlRejResponseTo() string {
	if m != nil {
		return m.CxlRejResponseTo
	}
	return ""
}

func (m *OrderCancelReject) GetCxlRejReason() string {
	if m != nil {
		return m.CxlRejReason
	}
	return ""
}

func (m *OrderCancelReject) GetRejectText() string {
	if m != nil {
		return m.RejectText
	}
	return ""
}

func (m *OrderCancelReject) GetTransactTime() int64 {
	if m != nil {
		return m.TransactTime
	}
	return 0
}

type OrderMassCancelRequest struct {
	MsgType               string   `protobuf:"bytes,35,opt,name=MsgType,json=msgType,proto3" json:"msgType,omitempty"`
	ClOrdId               string   `protobuf:"bytes,11,opt,name=ClOrdId,json=clOrdId,proto3" json:"clOrdId,omitempty"`
	MassCancelRequestType string   `protobuf:"bytes,530,opt,name=MassCancelRequestType,json=massCancelRequestType,proto3" json:"massCancelRequestType,omitempty"`
	Symbol                string   `protobuf:"bytes,55,opt,name=Symbol,json=symbol,proto3" json:"symbol,omitempty"`
	Side                  string   `protobuf:"bytes,54,opt,name=Side,json=side,proto3" json:"side,omitempty"`
	PositionEffect        string   `protobuf:"bytes,77,opt,name=PositionEffect,json=positionEffect,proto3" json:"positionEffect,omitempty"`
	Account               uint64   `protobuf:"varint,1,opt,name=Account,json=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *OrderMassCancelRequest) Reset()         { *m = OrderMassCancelRequest{} }
func (m *OrderMassCancelRequest) String() string { return proto.CompactTextString(m) }
func (*OrderMassCancelRequest) ProtoMessage()    {}
func (*OrderMassCancelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{8}
}

func (m *OrderMassCancelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderMassCancelRequest.Unmarshal(m, b)
}
func (m *OrderMassCancelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderMassCancelRequest.Marshal(b, m, deterministic)
}
func (m *OrderMassCancelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderMassCancelRequest.Merge(m, src)
}
func (m *OrderMassCancelRequest) XXX_Size() int {
	return xxx_messageInfo_OrderMassCancelRequest.Size(m)
}
func (m *OrderMassCancelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderMassCancelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderMassCancelRequest proto.InternalMessageInfo

func (m *OrderMassCancelRequest) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *OrderMassCancelRequest) GetClOrdId() string {
	if m != nil {
		return m.ClOrdId
	}
	return ""
}

func (m *OrderMassCancelRequest) GetMassCancelRequestType() string {
	if m != nil {
		return m.MassCancelRequestType
	}
	return ""
}

func (m *OrderMassCancelRequest) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *OrderMassCancelRequest) GetSide() string {
	if m != nil {
		return m.Side
	}
	return ""
}

func (m *OrderMassCancelRequest) GetPositionEffect() string {
	if m != nil {
		return m.PositionEffect
	}
	return ""
}

func (m *OrderMassCancelRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

type OrderMassCancelReport struct {
	MsgType                string   `protobuf:"bytes,35,opt,name=MsgType,json=msgType,proto3" json:"msgType,omitempty"`
	ClOrdId                string   `protobuf:"bytes,11,opt,name=ClOrdId,json=clOrdId,proto3" json:"clOrdId,omitempty"`
	MassActionReportID     string   `protobuf:"bytes,1369,opt,name=MassActionReportID,json=massActionReportID,proto3" json:"massActionReportID,omitempty"`
	MassCancelResponse     string   `protobuf:"bytes,531,opt,name=MassCancelResponse,json=massCancelResponse,proto3" json:"massCancelResponse,omitempty"`
	MassCancelRejectReason string   `protobuf:"bytes,532,opt,name=MassCancelRejectReason,json=massCancelRejectReason,proto3" json:"massCancelRejectReason,omitempty"`
	RejectText             string   `protobuf:"bytes,1328,opt,name=RejectText,json=rejectText,proto3" json:"rejectText,omitempty"`
	Symbol                 string   `protobuf:"bytes,55,opt,name=Symbol,json=symbol,proto3" json:"symbol,omitempty"`
	Side                   string   `protobuf:"bytes,54,opt,name=Side,json=side,proto3" json:"side,omitempty"`
	TransactTime           int64    `protobuf:"varint,60,opt,name=TransactTime,json=transactTime,proto3" json:"transactTime,omitempty"`
	TotalAffectedOrders    int64    `protobuf:"varint,533,opt,name=TotalAffectedOrders,json=totalAffectedOrders,proto3" json:"totalAffectedOrders,omitempty"`
	Account                uint64   `protobuf:"varint,1,opt,name=Account,json=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *OrderMassCancelReport) Reset()         { *m = OrderMassCancelReport{} }
func (m *OrderMassCancelReport) String() string { return proto.CompactTextString(m) }
func (*OrderMassCancelReport) ProtoMessage()    {}
func (*OrderMassCancelReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{9}
}

func (m *OrderMassCancelReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderMassCancelReport.Unmarshal(m, b)
}
func (m *OrderMassCancelReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderMassCancelReport.Marshal(b, m, deterministic)
}
func (m *OrderMassCancelReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderMassCancelReport.Merge(m, src)
}
func (m *OrderMassCancelReport) XXX_Size() int {
	return xxx_messageInfo_OrderMassCancelReport.Size(m)
}
func (m *OrderMassCancelReport) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderMassCancelReport.DiscardUnknown(m)
}

var xxx_messageInfo_OrderMassCancelReport proto.InternalMessageInfo

func (m *OrderMassCancelReport) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *OrderMassCancelReport) GetClOrdId() string {
	if m != nil {
		return m.ClOrdId
	}
	return ""
}

func (m *OrderMassCancelReport) GetMassActionReportID() string {
	if m != nil {
		return m.MassActionReportID
	}
	return ""
}

func (m *OrderMassCancelReport) GetMassCancelResponse() string {
	if m != nil {
		return m.MassCancelResponse
	}
	return ""
}

func (m *OrderMassCancelReport) GetMassCancelRejectReason() string {
	if m != nil {
		return m.MassCancelRejectReason
	}
	return ""
}

func (m *OrderMassCancelReport) GetRejectText() string {
	if m != nil {
		return m.RejectText
	}
	return ""
}

func (m *OrderMassCancelReport) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *OrderMassCancelReport) GetSide() string {
	if m != nil {
		return m.Side
	}
	return ""
}

func (m *OrderMassCancelReport) GetTransactTime() int64 {
	if m != nil {
		return m.TransactTime
	}
	return 0
}

func (m *OrderMassCancelReport) GetTotalAffectedOrders() int64 {
	if m != nil {
		return m.TotalAffectedOrders
	}
	return 0
}

func (m *OrderMassCancelReport) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

type Reject struct {
	MsgType              string   `protobuf:"bytes,35,opt,name=MsgType,json=msgType,proto3" json:"msgType,omitempty"`
	RejectReason         string   `protobuf:"bytes,380,opt,name=RejectReason,json=rejectReason,proto3" json:"rejectReason,omitempty"`
	Text                 string   `protobuf:"bytes,58,opt,name=Text,json=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reject) Reset()         { *m = Reject{} }
func (m *Reject) String() string { return proto.CompactTextString(m) }
func (*Reject) ProtoMessage()    {}
func (*Reject) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{10}
}

func (m *Reject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reject.Unmarshal(m, b)
}
func (m *Reject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reject.Marshal(b, m, deterministic)
}
func (m *Reject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reject.Merge(m, src)
}
func (m *Reject) XXX_Size() int {
	return xxx_messageInfo_Reject.Size(m)
}
func (m *Reject) XXX_DiscardUnknown() {
	xxx_messageInfo_Reject.DiscardUnknown(m)
}

var xxx_messageInfo_Reject proto.InternalMessageInfo

func (m *Reject) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *Reject) GetRejectReason() string {
	if m != nil {
		return m.RejectReason
	}
	return ""
}

func (m *Reject) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type OrderStatusRequest struct {
	MsgType              string   `protobuf:"bytes,35,opt,name=MsgType,json=msgType,proto3" json:"msgType,omitempty"`
	OrdStatusReqId       string   `protobuf:"bytes,790,opt,name=OrdStatusReqId,json=ordStatusReqId,proto3" json:"ordStatusReqId,omitempty"`
	Account              uint64   `protobuf:"varint,1,opt,name=Account,json=account,proto3" json:"account,omitempty"`
	ClOrdId              string   `protobuf:"bytes,11,opt,name=ClOrdId,json=clOrdId,proto3" json:"clOrdId,omitempty"`
	OrderId              string   `protobuf:"bytes,37,opt,name=OrderId,json=orderId,proto3" json:"orderId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderStatusRequest) Reset()         { *m = OrderStatusRequest{} }
func (m *OrderStatusRequest) String() string { return proto.CompactTextString(m) }
func (*OrderStatusRequest) ProtoMessage()    {}
func (*OrderStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{11}
}

func (m *OrderStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderStatusRequest.Unmarshal(m, b)
}
func (m *OrderStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderStatusRequest.Marshal(b, m, deterministic)
}
func (m *OrderStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderStatusRequest.Merge(m, src)
}
func (m *OrderStatusRequest) XXX_Size() int {
	return xxx_messageInfo_OrderStatusRequest.Size(m)
}
func (m *OrderStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderStatusRequest proto.InternalMessageInfo

func (m *OrderStatusRequest) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *OrderStatusRequest) GetOrdStatusReqId() string {
	if m != nil {
		return m.OrdStatusReqId
	}
	return ""
}

func (m *OrderStatusRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *OrderStatusRequest) GetClOrdId() string {
	if m != nil {
		return m.ClOrdId
	}
	return ""
}

func (m *OrderStatusRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type OrderMassStatusRequest struct {
	MsgType              string   `protobuf:"bytes,35,opt,name=MsgType,json=msgType,proto3" json:"msgType,omitempty"`
	MassStatusReqId      string   `protobuf:"bytes,584,opt,name=MassStatusReqId,json=massStatusReqId,proto3" json:"massStatusReqId,omitempty"`
	MassStatusReqType    string   `protobuf:"bytes,585,opt,name=MassStatusReqType,json=massStatusReqType,proto3" json:"massStatusReqType,omitempty"`
	Account              uint64   `protobuf:"varint,1,opt,name=Account,json=account,proto3" json:"account,omitempty"`
	Symbol               string   `protobuf:"bytes,55,opt,name=Symbol,json=symbol,proto3" json:"symbol,omitempty"`
	TransactTime         []int64  `protobuf:"varint,580,rep,packed,name=TransactTime,json=transactTime,proto3" json:"transactTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderMassStatusRequest) Reset()         { *m = OrderMassStatusRequest{} }
func (m *OrderMassStatusRequest) String() string { return proto.CompactTextString(m) }
func (*OrderMassStatusRequest) ProtoMessage()    {}
func (*OrderMassStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{12}
}

func (m *OrderMassStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderMassStatusRequest.Unmarshal(m, b)
}
func (m *OrderMassStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderMassStatusRequest.Marshal(b, m, deterministic)
}
func (m *OrderMassStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderMassStatusRequest.Merge(m, src)
}
func (m *OrderMassStatusRequest) XXX_Size() int {
	return xxx_messageInfo_OrderMassStatusRequest.Size(m)
}
func (m *OrderMassStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderMassStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderMassStatusRequest proto.InternalMessageInfo

func (m *OrderMassStatusRequest) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *OrderMassStatusRequest) GetMassStatusReqId() string {
	if m != nil {
		return m.MassStatusReqId
	}
	return ""
}

func (m *OrderMassStatusRequest) GetMassStatusReqType() string {
	if m != nil {
		return m.MassStatusReqType
	}
	return ""
}

func (m *OrderMassStatusRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *OrderMassStatusRequest) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *OrderMassStatusRequest) GetTransactTime() []int64 {
	if m != nil {
		return m.TransactTime
	}
	return nil
}

type OrderMassStatusResponse struct {
	MsgType              string             `protobuf:"bytes,35,opt,name=MsgType,json=msgType,proto3" json:"msgType,omitempty"`
	MassStatusReqId      string             `protobuf:"bytes,584,opt,name=MassStatusReqId,json=massStatusReqId,proto3" json:"massStatusReqId,omitempty"`
	Account              uint64             `protobuf:"varint,1,opt,name=Account,json=account,proto3" json:"account,omitempty"`
	ExecutionReports     []*ExecutionReport `protobuf:"bytes,1268,rep,name=ExecutionReports,json=executionReports,proto3" json:"executionReports,omitempty"`
	RejectReason         string             `protobuf:"bytes,380,opt,name=RejectReason,json=rejectReason,proto3" json:"rejectReason,omitempty"`
	Text                 string             `protobuf:"bytes,58,opt,name=Text,json=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *OrderMassStatusResponse) Reset()         { *m = OrderMassStatusResponse{} }
func (m *OrderMassStatusResponse) String() string { return proto.CompactTextString(m) }
func (*OrderMassStatusResponse) ProtoMessage()    {}
func (*OrderMassStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{13}
}

func (m *OrderMassStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderMassStatusResponse.Unmarshal(m, b)
}
func (m *OrderMassStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderMassStatusResponse.Marshal(b, m, deterministic)
}
func (m *OrderMassStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderMassStatusResponse.Merge(m, src)
}
func (m *OrderMassStatusResponse) XXX_Size() int {
	return xxx_messageInfo_OrderMassStatusResponse.Size(m)
}
func (m *OrderMassStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderMassStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderMassStatusResponse proto.InternalMessageInfo

func (m *OrderMassStatusResponse) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *OrderMassStatusResponse) GetMassStatusReqId() string {
	if m != nil {
		return m.MassStatusReqId
	}
	return ""
}

func (m *OrderMassStatusResponse) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *OrderMassStatusResponse) GetExecutionReports() []*ExecutionReport {
	if m != nil {
		return m.ExecutionReports
	}
	return nil
}

func (m *OrderMassStatusResponse) GetRejectReason() string {
	if m != nil {
		return m.RejectReason
	}
	return ""
}

func (m *OrderMassStatusResponse) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type TradeCaptureReportRequest struct {
	MsgType              string   `protobuf:"bytes,35,opt,name=MsgType,json=msgType,proto3" json:"msgType,omitempty"`
	TradeRequestID       string   `protobuf:"bytes,568,opt,name=TradeRequestID,json=tradeRequestID,proto3" json:"tradeRequestID,omitempty"`
	Account              uint64   `protobuf:"varint,1,opt,name=Account,json=account,proto3" json:"account,omitempty"`
	Symbol               string   `protobuf:"bytes,55,opt,name=Symbol,json=symbol,proto3" json:"symbol,omitempty"`
	TransactTime         []int64  `protobuf:"varint,580,rep,packed,name=TransactTime,json=transactTime,proto3" json:"transactTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradeCaptureReportRequest) Reset()         { *m = TradeCaptureReportRequest{} }
func (m *TradeCaptureReportRequest) String() string { return proto.CompactTextString(m) }
func (*TradeCaptureReportRequest) ProtoMessage()    {}
func (*TradeCaptureReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{14}
}

func (m *TradeCaptureReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeCaptureReportRequest.Unmarshal(m, b)
}
func (m *TradeCaptureReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeCaptureReportRequest.Marshal(b, m, deterministic)
}
func (m *TradeCaptureReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeCaptureReportRequest.Merge(m, src)
}
func (m *TradeCaptureReportRequest) XXX_Size() int {
	return xxx_messageInfo_TradeCaptureReportRequest.Size(m)
}
func (m *TradeCaptureReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeCaptureReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TradeCaptureReportRequest proto.InternalMessageInfo

func (m *TradeCaptureReportRequest) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *TradeCaptureReportRequest) GetTradeRequestID() string {
	if m != nil {
		return m.TradeRequestID
	}
	return ""
}

func (m *TradeCaptureReportRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *TradeCaptureReportRequest) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TradeCaptureReportRequest) GetTransactTime() []int64 {
	if m != nil {
		return m.TransactTime
	}
	return nil
}

type MassTradeCaptureReportResponse struct {
	MsgType              string             `protobuf:"bytes,35,opt,name=MsgType,json=msgType,proto3" json:"msgType,omitempty"`
	TradeRequestID       string             `protobuf:"bytes,568,opt,name=TradeRequestID,json=tradeRequestID,proto3" json:"tradeRequestID,omitempty"`
	Account              uint64             `protobuf:"varint,1,opt,name=Account,json=account,proto3" json:"account,omitempty"`
	ExecutionReports     []*ExecutionReport `protobuf:"bytes,1268,rep,name=ExecutionReports,json=executionReports,proto3" json:"executionReports,omitempty"`
	RejectReason         string             `protobuf:"bytes,380,opt,name=RejectReason,json=rejectReason,proto3" json:"rejectReason,omitempty"`
	Text                 string             `protobuf:"bytes,58,opt,name=Text,json=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MassTradeCaptureReportResponse) Reset()         { *m = MassTradeCaptureReportResponse{} }
func (m *MassTradeCaptureReportResponse) String() string { return proto.CompactTextString(m) }
func (*MassTradeCaptureReportResponse) ProtoMessage()    {}
func (*MassTradeCaptureReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{15}
}

func (m *MassTradeCaptureReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MassTradeCaptureReportResponse.Unmarshal(m, b)
}
func (m *MassTradeCaptureReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MassTradeCaptureReportResponse.Marshal(b, m, deterministic)
}
func (m *MassTradeCaptureReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MassTradeCaptureReportResponse.Merge(m, src)
}
func (m *MassTradeCaptureReportResponse) XXX_Size() int {
	return xxx_messageInfo_MassTradeCaptureReportResponse.Size(m)
}
func (m *MassTradeCaptureReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MassTradeCaptureReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MassTradeCaptureReportResponse proto.InternalMessageInfo

func (m *MassTradeCaptureReportResponse) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *MassTradeCaptureReportResponse) GetTradeRequestID() string {
	if m != nil {
		return m.TradeRequestID
	}
	return ""
}

func (m *MassTradeCaptureReportResponse) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *MassTradeCaptureReportResponse) GetExecutionReports() []*ExecutionReport {
	if m != nil {
		return m.ExecutionReports
	}
	return nil
}

func (m *MassTradeCaptureReportResponse) GetRejectReason() string {
	if m != nil {
		return m.RejectReason
	}
	return ""
}

func (m *MassTradeCaptureReportResponse) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type OrderCancelReplaceRequest struct {
	MsgType string `protobuf:"bytes,35,opt,name=MsgType,json=msgType,proto3" json:"msgType,omitempty"`
	// Request ID unique for Account.
	ClOrdId string `protobuf:"bytes,11,opt,name=ClOrdId,json=clOrdId,proto3" json:"clOrdId,omitempty"`
	// Client Order ID (ClOrdId) of order to modify
	OrigClOrdId string `protobuf:"bytes,41,opt,name=OrigClOrdId,json=origClOrdId,proto3" json:"origClOrdId,omitempty"`
	// Unique order ID across the exchange.
	OrderId      string `protobuf:"bytes,37,opt,name=OrderId,json=orderId,proto3" json:"orderId,omitempty"`
	Symbol       string `protobuf:"bytes,55,opt,name=Symbol,json=symbol,proto3" json:"symbol,omitempty"`
	Side         string `protobuf:"bytes,54,opt,name=Side,json=side,proto3" json:"side,omitempty"`
	TransactTime int64  `protobuf:"varint,60,opt,name=TransactTime,json=transactTime,proto3" json:"transactTime,omitempty"`
	// Unique client ID across exchange.
	Account uint64 `protobuf:"varint,1,opt,name=Account,json=account,proto3" json:"account,omitempty"`
	// New ExecInst
	ExecInst []string `protobuf:"bytes,18,rep,name=ExecInst,json=execInst,proto3" json:"execInst,omitempty"`
	// New fields
	OrderQty       string `protobuf:"bytes,38,opt,name=OrderQty,json=orderQty,proto3" json:"orderQty,omitempty"`
	Price          string `protobuf:"bytes,44,opt,name=Price,json=price,proto3" json:"price,omitempty"`
	StopPx         string `protobuf:"bytes,99,opt,name=StopPx,json=stopPx,proto3" json:"stopPx,omitempty"`
	CapPrice       string `protobuf:"bytes,1199,opt,name=CapPrice,json=capPrice,proto3" json:"capPrice,omitempty"`
	PegPriceType   string `protobuf:"bytes,1094,opt,name=PegPriceType,json=pegPriceType,proto3" json:"pegPriceType,omitempty"`
	PegOffsetType  string `protobuf:"bytes,836,opt,name=PegOffsetType,json=pegOffsetType,proto3" json:"pegOffsetType,omitempty"`
	PegOffsetValue string `protobuf:"bytes,211,opt,name=PegOffsetValue,json=pegOffsetValue,proto3" json:"pegOffsetValue,omitempty"`
	// Derivative SLTP
	SLTP                 []*SLTP  `protobuf:"bytes,5000,rep,name=SLTP,json=sltp,proto3" json:"sltp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderCancelReplaceRequest) Reset()         { *m = OrderCancelReplaceRequest{} }
func (m *OrderCancelReplaceRequest) String() string { return proto.CompactTextString(m) }
func (*OrderCancelReplaceRequest) ProtoMessage()    {}
func (*OrderCancelReplaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{16}
}

func (m *OrderCancelReplaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderCancelReplaceRequest.Unmarshal(m, b)
}
func (m *OrderCancelReplaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderCancelReplaceRequest.Marshal(b, m, deterministic)
}
func (m *OrderCancelReplaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderCancelReplaceRequest.Merge(m, src)
}
func (m *OrderCancelReplaceRequest) XXX_Size() int {
	return xxx_messageInfo_OrderCancelReplaceRequest.Size(m)
}
func (m *OrderCancelReplaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderCancelReplaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderCancelReplaceRequest proto.InternalMessageInfo

func (m *OrderCancelReplaceRequest) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *OrderCancelReplaceRequest) GetClOrdId() string {
	if m != nil {
		return m.ClOrdId
	}
	return ""
}

func (m *OrderCancelReplaceRequest) GetOrigClOrdId() string {
	if m != nil {
		return m.OrigClOrdId
	}
	return ""
}

func (m *OrderCancelReplaceRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *OrderCancelReplaceRequest) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *OrderCancelReplaceRequest) GetSide() string {
	if m != nil {
		return m.Side
	}
	return ""
}

func (m *OrderCancelReplaceRequest) GetTransactTime() int64 {
	if m != nil {
		return m.TransactTime
	}
	return 0
}

func (m *OrderCancelReplaceRequest) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *OrderCancelReplaceRequest) GetExecInst() []string {
	if m != nil {
		return m.ExecInst
	}
	return nil
}

func (m *OrderCancelReplaceRequest) GetOrderQty() string {
	if m != nil {
		return m.OrderQty
	}
	return ""
}

func (m *OrderCancelReplaceRequest) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *OrderCancelReplaceRequest) GetStopPx() string {
	if m != nil {
		return m.StopPx
	}
	return ""
}

func (m *OrderCancelReplaceRequest) GetCapPrice() string {
	if m != nil {
		return m.CapPrice
	}
	return ""
}

func (m *OrderCancelReplaceRequest) GetPegPriceType() string {
	if m != nil {
		return m.PegPriceType
	}
	return ""
}

func (m *OrderCancelReplaceRequest) GetPegOffsetType() string {
	if m != nil {
		return m.PegOffsetType
	}
	return ""
}

func (m *OrderCancelReplaceRequest) GetPegOffsetValue() string {
	if m != nil {
		return m.PegOffsetValue
	}
	return ""
}

func (m *OrderCancelReplaceRequest) GetSLTP() []*SLTP {
	if m != nil {
		return m.SLTP
	}
	return nil
}

type NewOrderList struct {
	MsgType string `protobuf:"bytes,35,opt,name=MsgType,json=msgType,proto3" json:"msgType,omitempty"`
	// List ID unique for Account.
	ListId          string            `protobuf:"bytes,66,opt,name=ListId,json=listId,proto3" json:"listId,omitempty"`
	BidType         string            `protobuf:"bytes,394,opt,name=BidType,json=bidType,proto3" json:"bidType,omitempty"`
	TotNoOrders     int32             `protobuf:"varint,68,opt,name=TotNoOrders,json=totNoOrders,proto3" json:"totNoOrders,omitempty"`
	ContingencyType string            `protobuf:"bytes,1385,opt,name=ContingencyType,json=contingencyType,proto3" json:"contingencyType,omitempty"`
	ListOrdGrp      []*NewOrderSingle `protobuf:"bytes,73,rep,name=ListOrdGrp,json=listOrdGrp,proto3" json:"listOrdGrp,omitempty"`
	NestedListGrp   []*NewOrderList   `protobuf:"bytes,1773,rep,name=NestedListGrp,json=nestedListGrp,proto3" json:"nestedListGrp,omitempty"`
	Symbol          string            `protobuf:"bytes,55,opt,name=Symbol,json=symbol,proto3" json:"symbol,omitempty"`
	TransactTime    int64             `protobuf:"varint,60,opt,name=TransactTime,json=transactTime,proto3" json:"transactTime,omitempty"`
	// Unique client ID across echange.
	Account              uint64   `protobuf:"varint,1,opt,name=Account,json=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewOrderList) Reset()         { *m = NewOrderList{} }
func (m *NewOrderList) String() string { return proto.CompactTextString(m) }
func (*NewOrderList) ProtoMessage()    {}
func (*NewOrderList) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{17}
}

func (m *NewOrderList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewOrderList.Unmarshal(m, b)
}
func (m *NewOrderList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewOrderList.Marshal(b, m, deterministic)
}
func (m *NewOrderList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewOrderList.Merge(m, src)
}
func (m *NewOrderList) XXX_Size() int {
	return xxx_messageInfo_NewOrderList.Size(m)
}
func (m *NewOrderList) XXX_DiscardUnknown() {
	xxx_messageInfo_NewOrderList.DiscardUnknown(m)
}

var xxx_messageInfo_NewOrderList proto.InternalMessageInfo

func (m *NewOrderList) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *NewOrderList) GetListId() string {
	if m != nil {
		return m.ListId
	}
	return ""
}

func (m *NewOrderList) GetBidType() string {
	if m != nil {
		return m.BidType
	}
	return ""
}

func (m *NewOrderList) GetTotNoOrders() int32 {
	if m != nil {
		return m.TotNoOrders
	}
	return 0
}

func (m *NewOrderList) GetContingencyType() string {
	if m != nil {
		return m.ContingencyType
	}
	return ""
}

func (m *NewOrderList) GetListOrdGrp() []*NewOrderSingle {
	if m != nil {
		return m.ListOrdGrp
	}
	return nil
}

func (m *NewOrderList) GetNestedListGrp() []*NewOrderList {
	if m != nil {
		return m.NestedListGrp
	}
	return nil
}

func (m *NewOrderList) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *NewOrderList) GetTransactTime() int64 {
	if m != nil {
		return m.TransactTime
	}
	return 0
}

func (m *NewOrderList) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

type OrderListAction struct {
	ContingencyType      string   `protobuf:"bytes,1385,opt,name=ContingencyType,json=contingencyType,proto3" json:"contingencyType,omitempty"`
	OrderId              []string `protobuf:"bytes,37,rep,name=OrderId,json=orderId,proto3" json:"orderId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderListAction) Reset()         { *m = OrderListAction{} }
func (m *OrderListAction) String() string { return proto.CompactTextString(m) }
func (*OrderListAction) ProtoMessage()    {}
func (*OrderListAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{18}
}

func (m *OrderListAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderListAction.Unmarshal(m, b)
}
func (m *OrderListAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderListAction.Marshal(b, m, deterministic)
}
func (m *OrderListAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderListAction.Merge(m, src)
}
func (m *OrderListAction) XXX_Size() int {
	return xxx_messageInfo_OrderListAction.Size(m)
}
func (m *OrderListAction) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderListAction.DiscardUnknown(m)
}

var xxx_messageInfo_OrderListAction proto.InternalMessageInfo

func (m *OrderListAction) GetContingencyType() string {
	if m != nil {
		return m.ContingencyType
	}
	return ""
}

func (m *OrderListAction) GetOrderId() []string {
	if m != nil {
		return m.OrderId
	}
	return nil
}

type ListStatus struct {
	MsgType string `protobuf:"bytes,35,opt,name=MsgType,json=msgType,proto3" json:"msgType,omitempty"`
	// Finance account. Unique client ID across exchange.
	Account uint64 `protobuf:"varint,1,opt,name=Account,json=account,proto3" json:"account,omitempty"`
	// List ID unique for Account.
	ListId string `protobuf:"bytes,66,opt,name=ListId,json=listId,proto3" json:"listId,omitempty"`
	// Trade instrument name.
	Symbol           string           `protobuf:"bytes,55,opt,name=Symbol,json=symbol,proto3" json:"symbol,omitempty"`
	ListStatusType   string           `protobuf:"bytes,429,opt,name=ListStatusType,json=listStatusType,proto3" json:"listStatusType,omitempty"`
	ListOrderStatus  string           `protobuf:"bytes,431,opt,name=ListOrderStatus,json=listOrderStatus,proto3" json:"listOrderStatus,omitempty"`
	ContingencyType  string           `protobuf:"bytes,1385,opt,name=ContingencyType,json=contingencyType,proto3" json:"contingencyType,omitempty"`
	ListRejectReason string           `protobuf:"bytes,1386,opt,name=ListRejectReason,json=listRejectReason,proto3" json:"listRejectReason,omitempty"`
	ListRejectOrder  *ExecutionReport `protobuf:"bytes,1387,opt,name=ListRejectOrder,json=listRejectOrder,proto3" json:"listRejectOrder,omitempty"`
	// Moment(timestamp) of transaction execution.
	TransactTime         int64    `protobuf:"varint,60,opt,name=TransactTime,json=transactTime,proto3" json:"transactTime,omitempty"`
	ListStatusText       string   `protobuf:"bytes,444,opt,name=ListStatusText,json=listStatusText,proto3" json:"listStatusText,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListStatus) Reset()         { *m = ListStatus{} }
func (m *ListStatus) String() string { return proto.CompactTextString(m) }
func (*ListStatus) ProtoMessage()    {}
func (*ListStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{19}
}

func (m *ListStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListStatus.Unmarshal(m, b)
}
func (m *ListStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListStatus.Marshal(b, m, deterministic)
}
func (m *ListStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListStatus.Merge(m, src)
}
func (m *ListStatus) XXX_Size() int {
	return xxx_messageInfo_ListStatus.Size(m)
}
func (m *ListStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ListStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ListStatus proto.InternalMessageInfo

func (m *ListStatus) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *ListStatus) GetAccount() uint64 {
	if m != nil {
		return m.Account
	}
	return 0
}

func (m *ListStatus) GetListId() string {
	if m != nil {
		return m.ListId
	}
	return ""
}

func (m *ListStatus) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *ListStatus) GetListStatusType() string {
	if m != nil {
		return m.ListStatusType
	}
	return ""
}

func (m *ListStatus) GetListOrderStatus() string {
	if m != nil {
		return m.ListOrderStatus
	}
	return ""
}

func (m *ListStatus) GetContingencyType() string {
	if m != nil {
		return m.ContingencyType
	}
	return ""
}

func (m *ListStatus) GetListRejectReason() string {
	if m != nil {
		return m.ListRejectReason
	}
	return ""
}

func (m *ListStatus) GetListRejectOrder() *ExecutionReport {
	if m != nil {
		return m.ListRejectOrder
	}
	return nil
}

func (m *ListStatus) GetTransactTime() int64 {
	if m != nil {
		return m.TransactTime
	}
	return 0
}

func (m *ListStatus) GetListStatusText() string {
	if m != nil {
		return m.ListStatusText
	}
	return ""
}

func init() {
	proto.RegisterType((*ApplicationHeartbeat)(nil), "xmsg.ApplicationHeartbeat")
	proto.RegisterType((*TriggeringInstruction)(nil), "xmsg.TriggeringInstruction")
	proto.RegisterType((*Partie)(nil), "xmsg.Partie")
	proto.RegisterType((*SLTP)(nil), "xmsg.SLTP")
	proto.RegisterType((*NewOrderSingle)(nil), "xmsg.NewOrderSingle")
	proto.RegisterType((*ExecutionReport)(nil), "xmsg.ExecutionReport")
	proto.RegisterType((*OrderCancelRequest)(nil), "xmsg.OrderCancelRequest")
	proto.RegisterType((*OrderCancelReject)(nil), "xmsg.OrderCancelReject")
	proto.RegisterType((*OrderMassCancelRequest)(nil), "xmsg.OrderMassCancelRequest")
	proto.RegisterType((*OrderMassCancelReport)(nil), "xmsg.OrderMassCancelReport")
	proto.RegisterType((*Reject)(nil), "xmsg.Reject")
	proto.RegisterType((*OrderStatusRequest)(nil), "xmsg.OrderStatusRequest")
	proto.RegisterType((*OrderMassStatusRequest)(nil), "xmsg.OrderMassStatusRequest")
	proto.RegisterType((*OrderMassStatusResponse)(nil), "xmsg.OrderMassStatusResponse")
	proto.RegisterType((*TradeCaptureReportRequest)(nil), "xmsg.TradeCaptureReportRequest")
	proto.RegisterType((*MassTradeCaptureReportResponse)(nil), "xmsg.MassTradeCaptureReportResponse")
	proto.RegisterType((*OrderCancelReplaceRequest)(nil), "xmsg.OrderCancelReplaceRequest")
	proto.RegisterType((*NewOrderList)(nil), "xmsg.NewOrderList")
	proto.RegisterType((*OrderListAction)(nil), "xmsg.OrderListAction")
	proto.RegisterType((*ListStatus)(nil), "xmsg.ListStatus")
}

func init() { proto.RegisterFile("order.proto", fileDescriptor_cd01338c35d87077) }

var fileDescriptor_cd01338c35d87077 = []byte{
	// 1788 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x59, 0xcb, 0x6f, 0x1b, 0x5b,
	0x19, 0x97, 0x6b, 0xc7, 0x8e, 0x3f, 0x3b, 0x76, 0x72, 0x6e, 0x92, 0x7b, 0x72, 0x2f, 0xf7, 0xd6,
	0x38, 0xdc, 0x9b, 0x54, 0xa5, 0x45, 0x50, 0x4a, 0xc5, 0x43, 0x82, 0xc4, 0x29, 0x65, 0xa4, 0x24,
	0x36, 0x63, 0xab, 0x1b, 0x56, 0x93, 0x99, 0x13, 0x33, 0xd5, 0xbc, 0x32, 0x73, 0x1c, 0xec, 0xff,
	0x00, 0x58, 0x74, 0xc1, 0xa3, 0x6c, 0x59, 0x80, 0x58, 0x20, 0x54, 0x84, 0x84, 0x84, 0x10, 0x0b,
	0x16, 0x15, 0x0f, 0x09, 0x90, 0x50, 0x57, 0x20, 0x24, 0x90, 0x58, 0x95, 0xd2, 0x22, 0x10, 0x6c,
	0x2a, 0x16, 0xe8, 0x9c, 0x6f, 0xc6, 0x9e, 0x71, 0xfc, 0xca, 0xa3, 0x54, 0xb0, 0xf3, 0xf7, 0xfb,
	0xbe, 0x73, 0xce, 0xf7, 0x3e, 0xdf, 0x1c, 0x43, 0xc1, 0xf5, 0x0d, 0xe6, 0x5f, 0xf7, 0x7c, 0x97,
	0xbb, 0x24, 0xd3, 0xb5, 0x83, 0x76, 0xb5, 0x0d, 0xcb, 0x5b, 0x9e, 0x67, 0x99, 0xba, 0xc6, 0x4d,
	0xd7, 0xf9, 0x0c, 0xd3, 0x7c, 0x7e, 0xc0, 0x34, 0x4e, 0x28, 0xe4, 0xf6, 0x82, 0x76, 0xab, 0xe7,
	0x31, 0xba, 0x5e, 0x49, 0x6d, 0xe6, 0xd5, 0x9c, 0x8d, 0x24, 0x59, 0x81, 0xb9, 0x3b, 0xbe, 0xa7,
	0xec, 0xd0, 0x2f, 0x6d, 0x48, 0xc6, 0x5c, 0xdb, 0xf7, 0x14, 0x83, 0xbc, 0x0d, 0x20, 0x57, 0x6f,
	0x73, 0xc5, 0xe1, 0xd4, 0xaa, 0xa4, 0x36, 0xe7, 0x54, 0xf8, 0x7c, 0x1f, 0xa9, 0x7e, 0x27, 0x05,
	0x2b, 0x2d, 0xdf, 0x6c, 0xb7, 0x99, 0x6f, 0x3a, 0x6d, 0xc5, 0x09, 0xb8, 0xdf, 0xd1, 0xc5, 0x99,
	0xe4, 0x32, 0x80, 0xca, 0x0e, 0x6b, 0x56, 0xdd, 0x37, 0x14, 0x83, 0xde, 0x2f, 0xc9, 0x5d, 0xc1,
	0x17, 0x90, 0x2b, 0x20, 0xf2, 0x0e, 0x2c, 0x84, 0x2b, 0xb7, 0xe4, 0x0a, 0xfa, 0xeb, 0x79, 0x29,
	0xb3, 0xc0, 0xe3, 0x28, 0x79, 0x2f, 0x14, 0x42, 0x31, 0xa9, 0xf6, 0xaf, 0x50, 0xa8, 0xc0, 0x07,
	0x18, 0x59, 0x87, 0x62, 0x28, 0xd2, 0xd4, 0x5d, 0x8f, 0xd1, 0x3f, 0x14, 0xa5, 0x4c, 0x91, 0xc7,
	0xc0, 0xea, 0x6d, 0xc8, 0x36, 0x34, 0x9f, 0x9b, 0x8c, 0xbc, 0x09, 0xf3, 0xf8, 0x4b, 0x31, 0xe8,
	0x4f, 0xd3, 0x52, 0x74, 0xde, 0x0b, 0x01, 0x61, 0x30, 0x32, 0x55, 0xd7, 0x62, 0xf4, 0x1a, 0x6a,
	0xed, 0xf5, 0x91, 0xea, 0x9f, 0x52, 0x90, 0x69, 0xee, 0xb6, 0x1a, 0xc2, 0x95, 0x75, 0xdf, 0x90,
	0x3a, 0x6d, 0xa2, 0x2b, 0x5d, 0x24, 0xc9, 0x32, 0xcc, 0x35, 0x7c, 0x53, 0x67, 0xf4, 0xfd, 0xe8,
	0x49, 0x4f, 0x10, 0x64, 0x15, 0xb2, 0x4d, 0xee, 0x7a, 0x8d, 0x2e, 0xd5, 0x25, 0x9c, 0x0d, 0x24,
	0x25, 0xb4, 0xa9, 0x69, 0x1e, 0x2e, 0x78, 0x98, 0x47, 0x6d, 0xf4, 0x10, 0x10, 0x96, 0x35, 0x58,
	0x5b, 0xfe, 0x96, 0x27, 0xfd, 0x0c, 0xad, 0x2f, 0x7a, 0x31, 0x50, 0x38, 0xb2, 0xc1, 0xda, 0xf5,
	0xc3, 0xc3, 0x80, 0x71, 0x29, 0xf5, 0x28, 0x8b, 0x8e, 0xf4, 0xe2, 0x28, 0xd9, 0x80, 0x52, 0x5f,
	0xec, 0xae, 0x66, 0x75, 0x18, 0x7d, 0x9c, 0x92, 0x72, 0x25, 0x2f, 0x01, 0x57, 0x7f, 0x93, 0x85,
	0xd2, 0x3e, 0xfb, 0x42, 0x5d, 0x64, 0x55, 0xd3, 0x74, 0xda, 0x16, 0x9b, 0x90, 0x37, 0x14, 0x72,
	0x51, 0x8c, 0x0b, 0xc8, 0xd1, 0x91, 0x0c, 0x1d, 0xc4, 0x7c, 0xc5, 0xa0, 0xef, 0xf4, 0x1d, 0x24,
	0x48, 0xe9, 0x8a, 0x9e, 0x7d, 0xe0, 0x5a, 0xf4, 0x56, 0xe8, 0x0a, 0x49, 0x11, 0x02, 0x99, 0xa6,
	0x69, 0x30, 0xfa, 0x11, 0x89, 0x66, 0x02, 0xd3, 0x60, 0xe4, 0x3d, 0x90, 0x6f, 0x32, 0xce, 0x2d,
	0x79, 0xf6, 0x27, 0x25, 0x23, 0x1f, 0x44, 0x00, 0xa9, 0x8a, 0xc8, 0x6b, 0x4e, 0xa0, 0xe9, 0xbc,
	0x65, 0xda, 0x8c, 0x7e, 0xa2, 0x92, 0xda, 0x4c, 0x8b, 0xc0, 0x0f, 0x30, 0xb1, 0xc3, 0xae, 0x19,
	0xf0, 0x26, 0x3b, 0xda, 0x77, 0x69, 0x4d, 0x66, 0x70, 0xde, 0x8a, 0x00, 0xf2, 0x06, 0xcc, 0x4b,
	0x2d, 0x3f, 0xcb, 0x7b, 0xf4, 0x5d, 0xf4, 0xbe, 0x1b, 0xd2, 0xff, 0x9d, 0x10, 0x53, 0xc8, 0x6d,
	0xe9, 0xba, 0xdb, 0x71, 0x38, 0x15, 0xe1, 0xc8, 0xa8, 0x39, 0x0d, 0x49, 0xa1, 0xda, 0xed, 0x2e,
	0xd3, 0x45, 0x51, 0x51, 0x52, 0x49, 0x8b, 0x55, 0x2c, 0xa4, 0x49, 0x05, 0x0a, 0xc2, 0x38, 0xc5,
	0xf9, 0xb4, 0xeb, 0xeb, 0x8c, 0x7e, 0x3c, 0x2c, 0x8a, 0x01, 0x44, 0xae, 0x40, 0xb9, 0xe6, 0xda,
	0xb6, 0x19, 0x04, 0xa6, 0xeb, 0xec, 0xb2, 0x63, 0x66, 0xd1, 0x9f, 0xbf, 0x2e, 0xc5, 0xca, 0x7a,
	0x12, 0x7f, 0x25, 0x59, 0x46, 0x5a, 0xb0, 0x3a, 0xb2, 0x71, 0x04, 0xf4, 0xf7, 0xf3, 0x95, 0xf4,
	0x66, 0xe1, 0x43, 0x6f, 0x5e, 0x17, 0xad, 0xec, 0xfa, 0x48, 0x21, 0x75, 0x95, 0x8f, 0x5c, 0x2b,
	0xba, 0x4e, 0xc3, 0x0d, 0x4c, 0x41, 0x28, 0x06, 0xfd, 0xf1, 0xb2, 0xf4, 0x28, 0x78, 0x7d, 0x88,
	0xbc, 0x0b, 0xa5, 0x48, 0xe0, 0xf6, 0xe1, 0x21, 0xd3, 0x39, 0xdd, 0x0b, 0xd5, 0x4b, 0xa0, 0xe4,
	0x32, 0x96, 0x39, 0xfd, 0xe2, 0x86, 0x54, 0x06, 0x50, 0x19, 0x01, 0xa9, 0x99, 0xc0, 0xe2, 0x9e,
	0x48, 0xd6, 0x16, 0xeb, 0x72, 0xfa, 0x31, 0x4c, 0x56, 0xce, 0xba, 0x7c, 0x4c, 0x13, 0xad, 0xfe,
	0xa3, 0x00, 0x65, 0x11, 0xc9, 0x8e, 0x54, 0x9d, 0x79, 0xae, 0x3f, 0xa9, 0x13, 0x6f, 0x40, 0xa9,
	0xee, 0x1b, 0x4d, 0xae, 0xf1, 0x4e, 0xa0, 0xb2, 0x23, 0x65, 0x87, 0x3e, 0x40, 0x4f, 0x97, 0xdc,
	0x04, 0x3c, 0x21, 0x73, 0xc6, 0x17, 0x65, 0x05, 0x0a, 0x75, 0xdf, 0x6c, 0x47, 0xdc, 0x2b, 0x98,
	0x37, 0xee, 0x00, 0x9a, 0x5c, 0xb6, 0xa2, 0x90, 0x14, 0x83, 0x6e, 0x63, 0x7a, 0x5b, 0x92, 0x1a,
	0x5b, 0xce, 0x17, 0x55, 0x3e, 0xe7, 0xab, 0x83, 0x59, 0x5a, 0xc4, 0x2a, 0x64, 0xe5, 0x09, 0x06,
	0x5d, 0xc2, 0x93, 0xe5, 0xfe, 0x86, 0x28, 0x5c, 0x81, 0x4b, 0x13, 0x1e, 0x60, 0x1a, 0xcb, 0xa3,
	0xa5, 0x11, 0x37, 0x61, 0x45, 0x30, 0x55, 0x16, 0x70, 0x8d, 0x33, 0x9b, 0x39, 0x5c, 0x65, 0x5a,
	0xe0, 0x3a, 0xf4, 0xc5, 0x25, 0x29, 0xb9, 0xc2, 0x46, 0x71, 0xc9, 0x1a, 0xe4, 0x5a, 0xbe, 0x66,
	0x88, 0xcb, 0xe7, 0x69, 0x0e, 0xdd, 0xc2, 0x91, 0x16, 0x9d, 0xaa, 0x1f, 0x79, 0x8a, 0x19, 0x94,
	0xef, 0xc7, 0x5c, 0x18, 0x52, 0xf7, 0x0d, 0x95, 0xdd, 0x0b, 0x8f, 0x69, 0x63, 0x91, 0xba, 0x31,
	0x6c, 0x64, 0x07, 0x9d, 0xd4, 0xe1, 0xde, 0x82, 0xfc, 0x2e, 0xd3, 0x8e, 0x59, 0x20, 0x98, 0xdf,
	0x40, 0x0b, 0xf3, 0x56, 0x84, 0x08, 0xbf, 0xd4, 0x3a, 0xb6, 0xe0, 0xe1, 0xf5, 0x9d, 0xd5, 0x25,
	0x25, 0x22, 0xbb, 0xab, 0x05, 0x5c, 0x30, 0x2a, 0x68, 0x82, 0x85, 0xe4, 0xe4, 0x56, 0x27, 0x12,
	0x48, 0x0b, 0x78, 0xa3, 0x4b, 0x2f, 0x87, 0x09, 0x24, 0x29, 0x91, 0x0e, 0x5b, 0xc7, 0xed, 0x46,
	0x97, 0x62, 0x9e, 0xcf, 0x69, 0x82, 0x20, 0x37, 0x60, 0xb9, 0xa6, 0x59, 0x7a, 0xc7, 0xd2, 0x38,
	0x33, 0x6a, 0x7a, 0x2f, 0x3a, 0xf1, 0x9b, 0xd8, 0x9d, 0x96, 0xf5, 0x11, 0x4c, 0x61, 0x6c, 0xad,
	0xe3, 0xfb, 0xcc, 0xd1, 0x7b, 0xb4, 0x1c, 0x1e, 0x1f, 0xd2, 0xe4, 0x7d, 0xb0, 0x20, 0xaf, 0x92,
	0xbe, 0x40, 0x17, 0x1b, 0x58, 0x10, 0x07, 0xa7, 0x5c, 0x38, 0x6f, 0xc0, 0xfc, 0x3e, 0xe3, 0x7b,
	0xae, 0xc3, 0x7a, 0xf4, 0x18, 0xf7, 0x77, 0x42, 0x9a, 0x5c, 0x85, 0x45, 0xa1, 0xc6, 0xae, 0x79,
	0xd4, 0x31, 0x0d, 0x93, 0xf7, 0x14, 0xc7, 0xa0, 0x8f, 0xd1, 0xa4, 0x45, 0x6b, 0x88, 0x21, 0xe6,
	0x8c, 0x41, 0x7b, 0xa6, 0x38, 0xb0, 0xc0, 0xa0, 0x31, 0x4b, 0x47, 0xba, 0xb6, 0xad, 0x6a, 0x9c,
	0xd1, 0xdf, 0x46, 0x8e, 0x0c, 0x01, 0xd1, 0xb0, 0x05, 0xb3, 0x6f, 0xc8, 0x1f, 0x71, 0x8a, 0x29,
	0xea, 0x31, 0x10, 0x07, 0xb0, 0x7b, 0x4c, 0xe7, 0xb2, 0x4d, 0x7d, 0x1f, 0xa2, 0x01, 0x2c, 0x82,
	0x5e, 0x4d, 0xdb, 0xbf, 0xb0, 0x06, 0xfd, 0x16, 0xe4, 0xf7, 0x34, 0xbf, 0x6d, 0x3a, 0x5b, 0x36,
	0xa7, 0xcf, 0xd0, 0x81, 0x79, 0x3b, 0x42, 0x84, 0xde, 0x7d, 0xb6, 0xd4, 0xfb, 0xaf, 0x28, 0xb2,
	0x60, 0xc7, 0x51, 0xe1, 0x83, 0xbe, 0x58, 0x4d, 0xef, 0xd1, 0xe7, 0xe1, 0xe8, 0x68, 0xc7, 0xc0,
	0x33, 0xdd, 0x05, 0xd5, 0xe7, 0x29, 0x20, 0xb2, 0xee, 0x6a, 0x9a, 0xa3, 0x33, 0x4b, 0x65, 0x47,
	0x1d, 0x16, 0xf0, 0x33, 0x4d, 0x52, 0xe7, 0x6c, 0xda, 0x33, 0xcf, 0x5a, 0xb3, 0xb4, 0xca, 0xb1,
	0x97, 0x4e, 0xf5, 0xc9, 0x25, 0x58, 0x4a, 0x18, 0x2c, 0x12, 0x6d, 0xb2, 0xbd, 0x63, 0xae, 0xaf,
	0x09, 0x17, 0xca, 0x4b, 0xf0, 0xd0, 0xe4, 0xae, 0x7b, 0x15, 0x16, 0x6b, 0x5d, 0x4b, 0x76, 0xd8,
	0xc0, 0x73, 0x9d, 0x80, 0xb5, 0x5c, 0xfa, 0x03, 0x2c, 0xb7, 0x45, 0x7d, 0x88, 0x21, 0x1c, 0x18,
	0x09, 0xcb, 0x16, 0x7d, 0x18, 0x96, 0x65, 0x0c, 0x9b, 0x5e, 0x96, 0x33, 0x44, 0xa1, 0xfa, 0xf7,
	0x14, 0xac, 0x4a, 0x73, 0xf6, 0xb4, 0x20, 0x38, 0x7f, 0x82, 0xdd, 0x84, 0x95, 0x13, 0x1b, 0xc9,
	0x1d, 0xbe, 0x92, 0xc1, 0xab, 0xcc, 0x1e, 0xc5, 0x3d, 0x55, 0x6e, 0xcd, 0x5a, 0xd6, 0xe3, 0xf3,
	0xeb, 0x5b, 0x69, 0x58, 0x39, 0x61, 0xf3, 0x94, 0x59, 0x6a, 0xbc, 0xc9, 0x1f, 0x00, 0x22, 0xf6,
	0xc1, 0x8f, 0x4c, 0xdc, 0x47, 0xd9, 0xa1, 0xbf, 0xc3, 0x70, 0x10, 0xfb, 0x04, 0x2b, 0x5a, 0x10,
	0x1d, 0x8c, 0x31, 0xa7, 0x5f, 0xcd, 0x0c, 0x16, 0x24, 0x59, 0xe4, 0x16, 0xac, 0xc6, 0x17, 0x88,
	0xf8, 0x86, 0x69, 0xf1, 0x35, 0x5c, 0xb4, 0x6a, 0x8f, 0x64, 0x4f, 0xcf, 0x90, 0x8b, 0xae, 0xe9,
	0x0f, 0xc2, 0x6b, 0x2d, 0x97, 0x6b, 0xd6, 0x96, 0x0c, 0x01, 0x33, 0xa4, 0x97, 0x03, 0xfa, 0xf5,
	0x8c, 0x94, 0x7d, 0x8d, 0x9f, 0xe4, 0x4d, 0x08, 0xd3, 0xe7, 0x20, 0x3b, 0xb5, 0xf4, 0xd7, 0xa1,
	0x98, 0x70, 0xc8, 0xbf, 0x71, 0x62, 0x2a, 0xfa, 0x71, 0x37, 0x8c, 0x6a, 0xaa, 0xdf, 0x8e, 0x9a,
	0x6a, 0x7f, 0x0e, 0x9e, 0x92, 0xf3, 0xc3, 0xc3, 0xb4, 0x31, 0x7a, 0x98, 0x36, 0xce, 0x34, 0x4c,
	0x8f, 0xed, 0x29, 0xd5, 0x3f, 0xc7, 0xeb, 0x73, 0x56, 0x5d, 0xaf, 0x40, 0x39, 0x21, 0xae, 0x18,
	0xf4, 0x17, 0x98, 0x29, 0x65, 0x3b, 0x89, 0x93, 0x6b, 0xb0, 0x94, 0x10, 0x95, 0xdb, 0xfd, 0x12,
	0x85, 0x97, 0xec, 0x61, 0xce, 0x19, 0x5a, 0xed, 0xfa, 0x50, 0xda, 0x3c, 0xca, 0x54, 0xd2, 0x27,
	0xba, 0xd0, 0xbf, 0x52, 0xf0, 0xfa, 0x09, 0x2b, 0xc3, 0xec, 0xbf, 0x10, 0x33, 0xc7, 0xeb, 0xbd,
	0x0d, 0x8b, 0x43, 0x5f, 0x54, 0x01, 0xfd, 0x67, 0x5e, 0x5e, 0xcf, 0x2b, 0x78, 0x3d, 0x0f, 0xb1,
	0xd5, 0x45, 0x36, 0x24, 0x7f, 0xf6, 0x2c, 0xfc, 0x61, 0x0a, 0xd6, 0xe4, 0x0c, 0x5f, 0xd3, 0x3c,
	0xde, 0xf1, 0x59, 0x78, 0xc2, 0x2c, 0xc9, 0x28, 0x97, 0x85, 0x92, 0xca, 0x0e, 0xfd, 0x11, 0x1a,
	0x5e, 0xe2, 0x09, 0xf8, 0x65, 0xc5, 0xeb, 0x45, 0x0a, 0xde, 0x16, 0xae, 0x1f, 0xa5, 0xfb, 0xd4,
	0xb0, 0x5d, 0x80, 0xf2, 0xaf, 0x34, 0x68, 0xf7, 0x33, 0xb0, 0x96, 0x18, 0x4f, 0x3c, 0x4b, 0xd3,
	0xd9, 0xff, 0xfd, 0x58, 0x36, 0xf1, 0xeb, 0x79, 0xd2, 0xa7, 0xe1, 0xff, 0xf8, 0x2b, 0xe6, 0xd4,
	0xa1, 0xbd, 0xfa, 0xb7, 0x4b, 0x50, 0x8c, 0x9e, 0x39, 0x77, 0xcd, 0x89, 0x39, 0x30, 0xee, 0xe5,
	0x63, 0x0d, 0x72, 0xdb, 0x26, 0xbe, 0x70, 0x7c, 0x19, 0x67, 0xc2, 0xdc, 0x01, 0xd2, 0xf2, 0x61,
	0xc2, 0xe5, 0xfb, 0x6e, 0x78, 0x97, 0xee, 0xc8, 0x77, 0xc7, 0x02, 0x1f, 0x40, 0xf8, 0x40, 0xe7,
	0x70, 0xd3, 0x69, 0x8b, 0xcf, 0x35, 0xb9, 0xc9, 0x13, 0x88, 0x1e, 0xe8, 0x12, 0x38, 0xf9, 0x30,
	0x80, 0x38, 0xbf, 0xee, 0x1b, 0x77, 0x7c, 0x8f, 0x2a, 0xd2, 0xa0, 0x65, 0x34, 0x28, 0xf9, 0x50,
	0xab, 0x82, 0xd5, 0x97, 0x23, 0x1f, 0x85, 0x85, 0x7d, 0x16, 0x70, 0x66, 0x88, 0xb5, 0x62, 0xe1,
	0xb3, 0x05, 0xb9, 0x92, 0x24, 0x57, 0x0a, 0xae, 0xba, 0xe0, 0xc4, 0x25, 0xc7, 0xa6, 0xe7, 0xf9,
	0xbe, 0x10, 0xee, 0x42, 0xb9, 0x7f, 0x62, 0xf8, 0xba, 0x7f, 0x0a, 0x27, 0x24, 0x8a, 0x29, 0x1d,
	0xbf, 0x6d, 0xbf, 0x9b, 0x46, 0xff, 0x84, 0x23, 0xfb, 0x19, 0x3f, 0x39, 0x4e, 0xf5, 0xb6, 0xb5,
	0x01, 0xa5, 0xc1, 0x89, 0xf2, 0xa8, 0xef, 0x61, 0x02, 0x94, 0xac, 0x04, 0x2c, 0x0c, 0x0c, 0x43,
	0x17, 0x0d, 0x2d, 0xf4, 0x21, 0x4a, 0x96, 0xad, 0x24, 0x7e, 0x1a, 0x5f, 0x5c, 0x85, 0x45, 0x19,
	0xb6, 0x78, 0x27, 0xfc, 0x0b, 0x84, 0x4f, 0x0d, 0x43, 0x0c, 0xf2, 0x29, 0x54, 0x01, 0x31, 0x79,
	0x20, 0x7d, 0x2a, 0x64, 0xc7, 0x76, 0xdd, 0xb2, 0x95, 0x14, 0x9f, 0x29, 0xec, 0x49, 0x8f, 0x88,
	0xee, 0xfb, 0x93, 0x93, 0x1e, 0x61, 0x5d, 0x7e, 0x90, 0x95, 0x7f, 0x54, 0xdd, 0xf8, 0x4f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xde, 0x3a, 0xf1, 0x9d, 0xb7, 0x1a, 0x00, 0x00,
}
